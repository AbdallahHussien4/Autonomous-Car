

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 28 20:59:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _SPBRG	set	4015
    60  0000                     _CCPR1L	set	4030
    61  0000                     _TMR2	set	4044
    62  0000                     _T2CONbits	set	4042
    63  0000                     _PR2	set	4043
    64  0000                     _CCP1CONbits	set	4029
    65  0000                     _RCREG	set	4014
    66  0000                     _LATB	set	3978
    67  0000                     _TRISB	set	3987
    68  0000                     _PORTDbits	set	3971
    69  0000                     _TRISD	set	3989
    70  0000                     _PORTD	set	3971
    71  0000                     _BRG16	set	32195
    72  0000                     _BRGH	set	32098
    73  0000                     _SYNC	set	32100
    74  0000                     _TXEN	set	32101
    75  0000                     _SPEN	set	32095
    76  0000                     _CREN	set	32092
    77  0000                     _RCIE	set	31981
    78  0000                     _TMR2ON	set	32338
    79  0000                     _TRISC2	set	31906
    80  0000                     _RCIF	set	31989
    81  0000                     _PEIE	set	32662
    82  0000                     _GIE	set	32663
    83                           
    84                           ; #config settings
    85  0000                     
    86                           	psect	cinit
    87  0002E0                     __pcinit:
    88                           	opt callstack 0
    89  0002E0                     start_initialization:
    90                           	opt callstack 0
    91  0002E0                     __initialization:
    92                           	opt callstack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (6 bytes)
    95  0002E0  6A12               	clrf	(__pbssCOMRAM+5)& (0+255),c
    96  0002E2  6A11               	clrf	(__pbssCOMRAM+4)& (0+255),c
    97  0002E4  6A10               	clrf	(__pbssCOMRAM+3)& (0+255),c
    98  0002E6  6A0F               	clrf	(__pbssCOMRAM+2)& (0+255),c
    99  0002E8  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   100  0002EA  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   101  0002EC                     end_of_initialization:
   102                           	opt callstack 0
   103  0002EC                     __end_of__initialization:
   104                           	opt callstack 0
   105  0002EC  9013               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   106  0002EE  9213               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   107  0002F0  0100               	movlb	0
   108  0002F2  EF09  F000         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	bssCOMRAM
   111  00000D                     __pbssCOMRAM:
   112                           	opt callstack 0
   113  00000D                     _i:
   114                           	opt callstack 0
   115  00000D                     	ds	1
   116  00000E                     _array:
   117                           	opt callstack 0
   118  00000E                     	ds	5
   119                           
   120                           	psect	cstackCOMRAM
   121  000001                     __pcstackCOMRAM:
   122                           	opt callstack 0
   123  000001                     ??_rec:
   124                           
   125                           ; 1 bytes @ 0x0
   126  000001                     	ds	2
   127  000003                     LCDWriteNibble@rs:
   128                           	opt callstack 0
   129  000003                     pwmreg@duty:
   130                           	opt callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133  000003                     	ds	1
   134  000004                     LCDWriteNibble@ch:
   135                           	opt callstack 0
   136                           
   137                           ; 1 bytes @ 0x3
   138  000004                     	ds	1
   139  000005                     ??_LCDPutCmd:
   140  000005                     ??_pwmreg:
   141  000005                     ??_LCDPutChar:
   142                           
   143                           ; 1 bytes @ 0x4
   144  000005                     	ds	1
   145  000006                     LCDPutChar@ch:
   146                           	opt callstack 0
   147  000006                     LCDPutCmd@ch:
   148                           	opt callstack 0
   149                           
   150                           ; 1 bytes @ 0x5
   151  000006                     	ds	1
   152  000007                     ??_LCD_Initialize:
   153  000007                     LCDGoto@ln:
   154                           	opt callstack 0
   155  000007                     LCDPutStr@str:
   156                           	opt callstack 0
   157                           
   158                           ; 2 bytes @ 0x6
   159  000007                     	ds	1
   160  000008                     ??_LCDGoto:
   161                           
   162                           ; 1 bytes @ 0x7
   163  000008                     	ds	1
   164  000009                     LCDPutStr@i:
   165                           	opt callstack 0
   166                           
   167                           ; 1 bytes @ 0x8
   168  000009                     	ds	1
   169  00000A                     _LCDGoto$119:
   170                           	opt callstack 0
   171                           
   172                           ; 2 bytes @ 0x9
   173  00000A                     	ds	2
   174  00000C                     LCDGoto@pos:
   175                           	opt callstack 0
   176                           
   177                           ; 1 bytes @ 0xB
   178  00000C                     	ds	1
   179  00000D                     
   180                           ; 1 bytes @ 0xC
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 16 in file "newmain.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels required when called:    4
   206 ;; This function calls:
   207 ;;		_BRG9600
   208 ;;		_LCDGoto
   209 ;;		_LCDPutStr
   210 ;;		_LCD_Initialize
   211 ;;		_pwminit
   212 ;;		_pwmreg
   213 ;;		_recinit
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text0
   220  000012                     __ptext0:
   221                           	opt callstack 0
   222  000012                     _main:
   223                           	opt callstack 27
   224  000012                     
   225                           ;newmain.c: 18:      LCD_Initialize();
   226  000012  ECC7  F000         	call	_LCD_Initialize	;wreg free
   227  000016                     
   228                           ;newmain.c: 19:      GIE=1;
   229  000016  8EF2               	bsf	4082,7,c	;volatile
   230  000018                     
   231                           ;newmain.c: 20:      recinit();
   232  000018  EC83  F001         	call	_recinit	;wreg free
   233  00001C                     
   234                           ;newmain.c: 21:      BRG9600();
   235  00001C  EC7B  F001         	call	_BRG9600	;wreg free
   236  000020                     
   237                           ;newmain.c: 22:      PEIE=1;
   238  000020  8CF2               	bsf	4082,6,c	;volatile
   239  000022                     
   240                           ;newmain.c: 23:      TRISB=0;
   241  000022  0E00               	movlw	0
   242  000024  6E93               	movwf	147,c	;volatile
   243  000026                     
   244                           ;newmain.c: 24:      LATB=0x00;
   245  000026  0E00               	movlw	0
   246  000028  6E8A               	movwf	138,c	;volatile
   247  00002A                     
   248                           ;newmain.c: 25:      pwminit();
   249  00002A  EC61  F001         	call	_pwminit	;wreg free
   250  00002E                     
   251                           ;newmain.c: 26:      pwmreg(255);
   252  00002E  0E00               	movlw	0
   253  000030  6E04               	movwf	(pwmreg@duty+1)^0,c
   254  000032  6803               	setf	pwmreg@duty^0,c
   255  000034  EC1E  F001         	call	_pwmreg	;wreg free
   256  000038                     l1029:
   257                           
   258                           ;newmain.c: 28:      {;newmain.c: 30:          if(array[4]=='R')
   259  000038  0E52               	movlw	82
   260  00003A  1812               	xorwf	(_array+4)^0,w,c
   261  00003C  A4D8               	btfss	status,2,c
   262  00003E  EF23  F000         	goto	u171
   263  000042  EF25  F000         	goto	u170
   264  000046                     u171:
   265  000046  EF29  F000         	goto	l1033
   266  00004A                     u170:
   267  00004A                     
   268                           ;newmain.c: 32:              LATB=8;
   269  00004A  0E08               	movlw	8
   270  00004C  6E8A               	movwf	138,c	;volatile
   271  00004E  EF50  F000         	goto	l1045
   272  000052                     l1033:
   273  000052  0E4C               	movlw	76
   274  000054  1812               	xorwf	(_array+4)^0,w,c
   275  000056  A4D8               	btfss	status,2,c
   276  000058  EF30  F000         	goto	u181
   277  00005C  EF32  F000         	goto	u180
   278  000060                     u181:
   279  000060  EF36  F000         	goto	l1037
   280  000064                     u180:
   281  000064                     
   282                           ;newmain.c: 34:              LATB=2;
   283  000064  0E02               	movlw	2
   284  000066  6E8A               	movwf	138,c	;volatile
   285  000068  EF50  F000         	goto	l1045
   286  00006C                     l1037:
   287  00006C  0E55               	movlw	85
   288  00006E  1812               	xorwf	(_array+4)^0,w,c
   289  000070  A4D8               	btfss	status,2,c
   290  000072  EF3D  F000         	goto	u191
   291  000076  EF3F  F000         	goto	u190
   292  00007A                     u191:
   293  00007A  EF43  F000         	goto	l1041
   294  00007E                     u190:
   295  00007E                     
   296                           ;newmain.c: 36:              LATB=1;
   297  00007E  0E01               	movlw	1
   298  000080  6E8A               	movwf	138,c	;volatile
   299  000082  EF50  F000         	goto	l1045
   300  000086                     l1041:
   301  000086  0E44               	movlw	68
   302  000088  1812               	xorwf	(_array+4)^0,w,c
   303  00008A  A4D8               	btfss	status,2,c
   304  00008C  EF4A  F000         	goto	u201
   305  000090  EF4C  F000         	goto	u200
   306  000094                     u201:
   307  000094  EF50  F000         	goto	l77
   308  000098                     u200:
   309  000098                     
   310                           ;newmain.c: 38:              LATB=4;
   311  000098  0E04               	movlw	4
   312  00009A  6E8A               	movwf	138,c	;volatile
   313  00009C  EF50  F000         	goto	l1045
   314  0000A0                     l77:
   315  0000A0                     l1045:
   316                           
   317                           ;newmain.c: 39:          LCDGoto(0,0);
   318  0000A0  0E00               	movlw	0
   319  0000A2  6E07               	movwf	LCDGoto@ln^0,c
   320  0000A4  0E00               	movlw	0
   321  0000A6  EC5F  F000         	call	_LCDGoto
   322  0000AA                     
   323                           ;newmain.c: 40:          LCDPutStr(array);
   324  0000AA  0E0E               	movlw	low _array
   325  0000AC  6E07               	movwf	LCDPutStr@str^0,c
   326  0000AE  0E00               	movlw	high _array
   327  0000B0  6E08               	movwf	(LCDPutStr@str+1)^0,c
   328  0000B2  ECE4  F000         	call	_LCDPutStr	;wreg free
   329  0000B6  EF1C  F000         	goto	l1029
   330  0000BA  EF07  F000         	goto	start
   331  0000BE                     __end_of_main:
   332                           	opt callstack 0
   333                           
   334 ;; *************** function _recinit *****************
   335 ;; Defined at:
   336 ;;		line 4 in file "Recieve.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		None
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; Hardware stack levels required when called:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text1
   365  000306                     __ptext1:
   366                           	opt callstack 0
   367  000306                     _recinit:
   368                           	opt callstack 29
   369  000306                     
   370                           ;Recieve.c: 6:     RCIE = 1;
   371  000306  8A9D               	bsf	3997,5,c	;volatile
   372                           
   373                           ;Recieve.c: 7:     RCIF = 0;
   374  000308  9A9E               	bcf	3998,5,c	;volatile
   375                           
   376                           ;Recieve.c: 8:     CREN = 1;
   377  00030A  88AB               	bsf	4011,4,c	;volatile
   378  00030C  0012               	return		;funcret
   379  00030E                     __end_of_recinit:
   380                           	opt callstack 0
   381                           
   382 ;; *************** function _pwmreg *****************
   383 ;; Defined at:
   384 ;;		line 13 in file "PWM.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  duty            2    2[COMRAM] int 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;Total ram usage:        4 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; Hardware stack levels required when called:    1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413  00023C                     __ptext2:
   414                           	opt callstack 0
   415  00023C                     _pwmreg:
   416                           	opt callstack 29
   417  00023C                     
   418                           ;PWM.c: 13: void pwmreg(int duty);PWM.c: 14: {;PWM.c: 15:     CCP1CONbits.DC1B=duty&0b11
      +                          ;
   419  00023C  C003  F005         	movff	pwmreg@duty,??_pwmreg
   420  000240  0E03               	movlw	3
   421  000242  1605               	andwf	??_pwmreg^0,f,c
   422  000244  3A05               	swapf	??_pwmreg^0,f,c
   423  000246  50BD               	movf	189,w,c	;volatile
   424  000248  1805               	xorwf	??_pwmreg^0,w,c
   425  00024A  0BCF               	andlw	-49
   426  00024C  1805               	xorwf	??_pwmreg^0,w,c
   427  00024E  6EBD               	movwf	189,c	;volatile
   428                           
   429                           ;PWM.c: 16:     CCPR1L=duty>>2;
   430  000250  C003  F005         	movff	pwmreg@duty,??_pwmreg
   431  000254  C004  F006         	movff	pwmreg@duty+1,??_pwmreg+1
   432  000258  3406               	rlcf	(??_pwmreg+1)^0,w,c
   433  00025A  3206               	rrcf	(??_pwmreg+1)^0,f,c
   434  00025C  3205               	rrcf	??_pwmreg^0,f,c
   435  00025E  3406               	rlcf	(??_pwmreg+1)^0,w,c
   436  000260  3206               	rrcf	(??_pwmreg+1)^0,f,c
   437  000262  3205               	rrcf	??_pwmreg^0,f,c
   438  000264  5005               	movf	??_pwmreg^0,w,c
   439  000266  6EBE               	movwf	190,c	;volatile
   440  000268  0012               	return		;funcret
   441  00026A                     __end_of_pwmreg:
   442                           	opt callstack 0
   443                           
   444 ;; *************** function _pwminit *****************
   445 ;; Defined at:
   446 ;;		line 4 in file "PWM.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text3
   475  0002C2                     __ptext3:
   476                           	opt callstack 0
   477  0002C2                     _pwminit:
   478                           	opt callstack 29
   479  0002C2                     
   480                           ;PWM.c: 6:     CCP1CONbits.CCP1M=12;
   481  0002C2  50BD               	movf	189,w,c	;volatile
   482  0002C4  0BF0               	andlw	-16
   483  0002C6  090C               	iorlw	12
   484  0002C8  6EBD               	movwf	189,c	;volatile
   485  0002CA                     
   486                           ;PWM.c: 7:     TRISC2=0;
   487  0002CA  9494               	bcf	3988,2,c	;volatile
   488                           
   489                           ;PWM.c: 8:     PR2=124;
   490  0002CC  0E7C               	movlw	124
   491  0002CE  6ECB               	movwf	203,c	;volatile
   492                           
   493                           ;PWM.c: 9:     T2CONbits.T2CKPS=2;
   494  0002D0  50CA               	movf	202,w,c	;volatile
   495  0002D2  0BFC               	andlw	-4
   496  0002D4  0902               	iorlw	2
   497  0002D6  6ECA               	movwf	202,c	;volatile
   498                           
   499                           ;PWM.c: 10:     TMR2=0;
   500  0002D8  0E00               	movlw	0
   501  0002DA  6ECC               	movwf	204,c	;volatile
   502  0002DC                     
   503                           ;PWM.c: 11:     TMR2ON=1;
   504  0002DC  84CA               	bsf	4042,2,c	;volatile
   505  0002DE  0012               	return		;funcret
   506  0002E0                     __end_of_pwminit:
   507                           	opt callstack 0
   508                           
   509 ;; *************** function _LCD_Initialize *****************
   510 ;; Defined at:
   511 ;;		line 46 in file "lcd.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:    3
   532 ;; This function calls:
   533 ;;		_LCDPutCmd
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text4
   540  00018E                     __ptext4:
   541                           	opt callstack 0
   542  00018E                     _LCD_Initialize:
   543                           	opt callstack 27
   544  00018E                     
   545                           ;lcd.c: 49:     PORTD = 0;
   546  00018E  0E00               	movlw	0
   547  000190  6E83               	movwf	131,c	;volatile
   548                           
   549                           ;lcd.c: 51:     TRISD = 0x00;
   550  000192  0E00               	movlw	0
   551  000194  6E95               	movwf	149,c	;volatile
   552  000196                     
   553                           ;lcd.c: 54:     PORTDbits.RD7 = 1;
   554  000196  8E83               	bsf	131,7,c	;volatile
   555  000198                     
   556                           ;lcd.c: 57:     _delay((unsigned long)((15)*(8e6/4000.0)));
   557  000198  0E27               	movlw	39
   558  00019A  6E07               	movwf	??_LCD_Initialize^0,c
   559  00019C  0EF5               	movlw	245
   560  00019E                     u217:
   561  00019E  2EE8               	decfsz	wreg,f,c
   562  0001A0  D7FE               	bra	u217
   563  0001A2  2E07               	decfsz	??_LCD_Initialize^0,f,c
   564  0001A4  D7FC               	bra	u217
   565  0001A6  F000               	nop	
   566  0001A8                     
   567                           ;lcd.c: 60:     LCDPutCmd(0x32);
   568  0001A8  0E32               	movlw	50
   569  0001AA  EC01  F001         	call	_LCDPutCmd
   570  0001AE                     
   571                           ;lcd.c: 63:     LCDPutCmd(0x28);
   572  0001AE  0E28               	movlw	40
   573  0001B0  EC01  F001         	call	_LCDPutCmd
   574  0001B4                     
   575                           ;lcd.c: 66:     LCDPutCmd(0x0C);
   576  0001B4  0E0C               	movlw	12
   577  0001B6  EC01  F001         	call	_LCDPutCmd
   578  0001BA                     
   579                           ;lcd.c: 68:     LCDPutCmd(0x01);
   580  0001BA  0E01               	movlw	1
   581  0001BC  EC01  F001         	call	_LCDPutCmd
   582  0001C0                     
   583                           ;lcd.c: 71:     LCDPutCmd(0x06);
   584  0001C0  0E06               	movlw	6
   585  0001C2  EC01  F001         	call	_LCDPutCmd
   586  0001C6  0012               	return		;funcret
   587  0001C8                     __end_of_LCD_Initialize:
   588                           	opt callstack 0
   589                           
   590 ;; *************** function _LCDPutStr *****************
   591 ;; Defined at:
   592 ;;		line 135 in file "lcd.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  str             2    6[COMRAM] PTR const unsigned char 
   595 ;;		 -> array(5), 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  i               1    8[COMRAM] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        3 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    3
   614 ;; This function calls:
   615 ;;		_LCDPutChar
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text5
   622  0001C8                     __ptext5:
   623                           	opt callstack 0
   624  0001C8                     _LCDPutStr:
   625                           	opt callstack 27
   626  0001C8                     
   627                           ;lcd.c: 135: void LCDPutStr(const char *str);lcd.c: 136: {;lcd.c: 137:     uint8_t i=0;
   628  0001C8  0E00               	movlw	0
   629  0001CA  6E09               	movwf	LCDPutStr@i^0,c
   630                           
   631                           ;lcd.c: 140:     while (str[i])
   632  0001CC  EFF2  F000         	goto	l993
   633  0001D0                     l989:
   634                           
   635                           ;lcd.c: 141:     {;lcd.c: 143:         LCDPutChar(str[i++]);
   636  0001D0  5009               	movf	LCDPutStr@i^0,w,c
   637  0001D2  2407               	addwf	LCDPutStr@str^0,w,c
   638  0001D4  6ED9               	movwf	fsr2l,c
   639  0001D6  0E00               	movlw	0
   640  0001D8  2008               	addwfc	(LCDPutStr@str+1)^0,w,c
   641  0001DA  6EDA               	movwf	fsr2h,c
   642  0001DC  50DF               	movf	indf2,w,c
   643  0001DE  EC35  F001         	call	_LCDPutChar
   644  0001E2  2A09               	incf	LCDPutStr@i^0,f,c
   645  0001E4                     l993:
   646                           
   647                           ;lcd.c: 140:     while (str[i])
   648  0001E4  5009               	movf	LCDPutStr@i^0,w,c
   649  0001E6  2407               	addwf	LCDPutStr@str^0,w,c
   650  0001E8  6ED9               	movwf	fsr2l,c
   651  0001EA  0E00               	movlw	0
   652  0001EC  2008               	addwfc	(LCDPutStr@str+1)^0,w,c
   653  0001EE  6EDA               	movwf	fsr2h,c
   654  0001F0  50DF               	movf	indf2,w,c
   655  0001F2  A4D8               	btfss	status,2,c
   656  0001F4  EFFE  F000         	goto	u131
   657  0001F8  EF00  F001         	goto	u130
   658  0001FC                     u131:
   659  0001FC  EFE8  F000         	goto	l989
   660  000200                     u130:
   661  000200  0012               	return		;funcret
   662  000202                     __end_of_LCDPutStr:
   663                           	opt callstack 0
   664                           
   665 ;; *************** function _LCDPutChar *****************
   666 ;; Defined at:
   667 ;;		line 103 in file "lcd.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  ch              1    wreg     unsigned char 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  ch              1    5[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;Total ram usage:        2 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    2
   688 ;; This function calls:
   689 ;;		_LCDWriteNibble
   690 ;; This function is called by:
   691 ;;		_LCDPutStr
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text6
   696  00026A                     __ptext6:
   697                           	opt callstack 0
   698  00026A                     _LCDPutChar:
   699                           	opt callstack 27
   700                           
   701                           ;incstack = 0
   702                           ;LCDPutChar@ch stored from wreg
   703  00026A  6E06               	movwf	LCDPutChar@ch^0,c
   704  00026C                     
   705                           ;lcd.c: 103: void LCDPutChar(uint8_t ch);lcd.c: 104: {;lcd.c: 105:     _delay((unsigned 
      +                          long)((5)*(8e6/4000.0)));
   706  00026C  0E0D               	movlw	13
   707  00026E  6E05               	movwf	??_LCDPutChar^0,c
   708  000270  0EFC               	movlw	252
   709  000272                     u227:
   710  000272  2EE8               	decfsz	wreg,f,c
   711  000274  D7FE               	bra	u227
   712  000276  2E05               	decfsz	??_LCDPutChar^0,f,c
   713  000278  D7FC               	bra	u227
   714  00027A                     
   715                           ;lcd.c: 108:     LCDWriteNibble(ch,1);
   716  00027A  0E01               	movlw	1
   717  00027C  6E03               	movwf	LCDWriteNibble@rs^0,c
   718  00027E  5006               	movf	LCDPutChar@ch^0,w,c
   719  000280  EC4B  F001         	call	_LCDWriteNibble
   720  000284                     
   721                           ;lcd.c: 111:     ch = (ch << 4);
   722  000284  3806               	swapf	LCDPutChar@ch^0,w,c
   723  000286  0BF0               	andlw	240
   724  000288  6E06               	movwf	LCDPutChar@ch^0,c
   725  00028A                     
   726                           ;lcd.c: 114:     LCDWriteNibble(ch,1);
   727  00028A  0E01               	movlw	1
   728  00028C  6E03               	movwf	LCDWriteNibble@rs^0,c
   729  00028E  5006               	movf	LCDPutChar@ch^0,w,c
   730  000290  EC4B  F001         	call	_LCDWriteNibble
   731  000294  0012               	return		;funcret
   732  000296                     __end_of_LCDPutChar:
   733                           	opt callstack 0
   734                           
   735 ;; *************** function _LCDGoto *****************
   736 ;; Defined at:
   737 ;;		line 148 in file "lcd.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  pos             1    wreg     unsigned char 
   740 ;;  ln              1    6[COMRAM] unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  pos             1   11[COMRAM] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;Total ram usage:        6 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    3
   759 ;; This function calls:
   760 ;;		_LCDPutCmd
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text7
   767  0000BE                     __ptext7:
   768                           	opt callstack 0
   769  0000BE                     _LCDGoto:
   770                           	opt callstack 27
   771                           
   772                           ;incstack = 0
   773                           ;LCDGoto@pos stored from wreg
   774  0000BE  6E0C               	movwf	LCDGoto@pos^0,c
   775  0000C0                     
   776                           ;lcd.c: 148: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 149: {;lcd.c: 151:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
   777  0000C0  0E02               	movlw	2
   778  0000C2  6007               	cpfslt	LCDGoto@ln^0,c
   779  0000C4  EF66  F000         	goto	u141
   780  0000C8  EF68  F000         	goto	u140
   781  0000CC                     u141:
   782  0000CC  EF96  F000         	goto	l34
   783  0000D0                     u140:
   784  0000D0  0E0F               	movlw	15
   785  0000D2  640C               	cpfsgt	LCDGoto@pos^0,c
   786  0000D4  EF6E  F000         	goto	u151
   787  0000D8  EF70  F000         	goto	u150
   788  0000DC                     u151:
   789  0000DC  EF72  F000         	goto	l999
   790  0000E0                     u150:
   791  0000E0  EF96  F000         	goto	l34
   792  0000E4                     l999:
   793                           
   794                           ;lcd.c: 158:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
   795  0000E4  0407               	decf	LCDGoto@ln^0,w,c
   796  0000E6  B4D8               	btfsc	status,2,c
   797  0000E8  EF78  F000         	goto	u161
   798  0000EC  EF7A  F000         	goto	u160
   799  0000F0                     u161:
   800  0000F0  EF84  F000         	goto	l1003
   801  0000F4                     u160:
   802  0000F4  0E80               	movlw	128
   803  0000F6  C00C  F008         	movff	LCDGoto@pos,??_LCDGoto
   804  0000FA  6A09               	clrf	(??_LCDGoto+1)^0,c
   805  0000FC  1008               	iorwf	??_LCDGoto^0,w,c
   806  0000FE  6E0A               	movwf	_LCDGoto$119^0,c
   807  000100  5009               	movf	(??_LCDGoto+1)^0,w,c
   808  000102  6E0B               	movwf	(_LCDGoto$119+1)^0,c
   809  000104  EF8C  F000         	goto	l1005
   810  000108                     l1003:
   811  000108  0EC0               	movlw	192
   812  00010A  C00C  F008         	movff	LCDGoto@pos,??_LCDGoto
   813  00010E  6A09               	clrf	(??_LCDGoto+1)^0,c
   814  000110  1008               	iorwf	??_LCDGoto^0,w,c
   815  000112  6E0A               	movwf	_LCDGoto$119^0,c
   816  000114  5009               	movf	(??_LCDGoto+1)^0,w,c
   817  000116  6E0B               	movwf	(_LCDGoto$119+1)^0,c
   818  000118                     l1005:
   819  000118  500A               	movf	_LCDGoto$119^0,w,c
   820  00011A  EC01  F001         	call	_LCDPutCmd
   821  00011E                     
   822                           ;lcd.c: 161:     _delay((unsigned long)((5)*(8e6/4000.0)));
   823  00011E  0E0D               	movlw	13
   824  000120  6E08               	movwf	??_LCDGoto^0,c
   825  000122  0EFC               	movlw	252
   826  000124                     u237:
   827  000124  2EE8               	decfsz	wreg,f,c
   828  000126  D7FE               	bra	u237
   829  000128  2E08               	decfsz	??_LCDGoto^0,f,c
   830  00012A  D7FC               	bra	u237
   831  00012C                     l34:
   832  00012C  0012               	return		;funcret
   833  00012E                     __end_of_LCDGoto:
   834                           	opt callstack 0
   835                           
   836 ;; *************** function _LCDPutCmd *****************
   837 ;; Defined at:
   838 ;;		line 118 in file "lcd.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  ch              1    wreg     unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  ch              1    5[COMRAM] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    2
   859 ;; This function calls:
   860 ;;		_LCDWriteNibble
   861 ;; This function is called by:
   862 ;;		_LCD_Initialize
   863 ;;		_LCDGoto
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text8
   868  000202                     __ptext8:
   869                           	opt callstack 0
   870  000202                     _LCDPutCmd:
   871                           	opt callstack 27
   872                           
   873                           ;incstack = 0
   874                           ;LCDPutCmd@ch stored from wreg
   875  000202  6E06               	movwf	LCDPutCmd@ch^0,c
   876  000204                     
   877                           ;lcd.c: 118: void LCDPutCmd(uint8_t ch);lcd.c: 119: {;lcd.c: 120:     _delay((unsigned l
      +                          ong)((5)*(8e6/4000.0)));
   878  000204  0E0D               	movlw	13
   879  000206  6E05               	movwf	??_LCDPutCmd^0,c
   880  000208  0EFC               	movlw	252
   881  00020A                     u247:
   882  00020A  2EE8               	decfsz	wreg,f,c
   883  00020C  D7FE               	bra	u247
   884  00020E  2E05               	decfsz	??_LCDPutCmd^0,f,c
   885  000210  D7FC               	bra	u247
   886  000212                     
   887                           ;lcd.c: 123:     LCDWriteNibble(ch,0);
   888  000212  0E00               	movlw	0
   889  000214  6E03               	movwf	LCDWriteNibble@rs^0,c
   890  000216  5006               	movf	LCDPutCmd@ch^0,w,c
   891  000218  EC4B  F001         	call	_LCDWriteNibble
   892  00021C                     
   893                           ;lcd.c: 126:     ch = (ch << 4);
   894  00021C  3806               	swapf	LCDPutCmd@ch^0,w,c
   895  00021E  0BF0               	andlw	240
   896  000220  6E06               	movwf	LCDPutCmd@ch^0,c
   897  000222                     
   898                           ;lcd.c: 128:     _delay((unsigned long)((1)*(8e6/4000.0)));
   899  000222  0E03               	movlw	3
   900  000224  6E05               	movwf	??_LCDPutCmd^0,c
   901  000226  0E98               	movlw	152
   902  000228                     u257:
   903  000228  2EE8               	decfsz	wreg,f,c
   904  00022A  D7FE               	bra	u257
   905  00022C  2E05               	decfsz	??_LCDPutCmd^0,f,c
   906  00022E  D7FC               	bra	u257
   907  000230                     
   908                           ;lcd.c: 131:     LCDWriteNibble(ch,0);
   909  000230  0E00               	movlw	0
   910  000232  6E03               	movwf	LCDWriteNibble@rs^0,c
   911  000234  5006               	movf	LCDPutCmd@ch^0,w,c
   912  000236  EC4B  F001         	call	_LCDWriteNibble
   913  00023A  0012               	return		;funcret
   914  00023C                     __end_of_LCDPutCmd:
   915                           	opt callstack 0
   916                           
   917 ;; *************** function _LCDWriteNibble *****************
   918 ;; Defined at:
   919 ;;		line 76 in file "lcd.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  ch              1    wreg     unsigned char 
   922 ;;  rs              1    2[COMRAM] unsigned char 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  ch              1    3[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        2 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    1
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_LCDPutChar
   945 ;;		_LCDPutCmd
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text9
   950  000296                     __ptext9:
   951                           	opt callstack 0
   952  000296                     _LCDWriteNibble:
   953                           	opt callstack 27
   954                           
   955                           ;incstack = 0
   956                           ;LCDWriteNibble@ch stored from wreg
   957  000296  6E04               	movwf	LCDWriteNibble@ch^0,c
   958  000298                     
   959                           ;lcd.c: 76: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 77: {;lcd.c: 79:     ch = 
      +                          (ch >> 4);
   960  000298  3804               	swapf	LCDWriteNibble@ch^0,w,c
   961  00029A  0B0F               	andlw	15
   962  00029C  6E04               	movwf	LCDWriteNibble@ch^0,c
   963                           
   964                           ;lcd.c: 82:     ch = (ch & 0x0F);
   965  00029E  5004               	movf	LCDWriteNibble@ch^0,w,c
   966  0002A0  0B0F               	andlw	15
   967  0002A2  6E04               	movwf	LCDWriteNibble@ch^0,c
   968                           
   969                           ;lcd.c: 85:     PORTD = (PORTD & 0xF0);
   970  0002A4  5083               	movf	131,w,c	;volatile
   971  0002A6  0BF0               	andlw	240
   972  0002A8  6E83               	movwf	131,c	;volatile
   973                           
   974                           ;lcd.c: 88:     PORTD = (PORTD | ch);
   975  0002AA  5083               	movf	131,w,c	;volatile
   976  0002AC  1004               	iorwf	LCDWriteNibble@ch^0,w,c
   977  0002AE  6E83               	movwf	131,c	;volatile
   978  0002B0                     
   979                           ;lcd.c: 91:     PORTDbits.RD4 = rs;
   980  0002B0  B003               	btfsc	LCDWriteNibble@rs^0,0,c
   981  0002B2  D002               	bra	u125
   982  0002B4  9883               	bcf	131,4,c	;volatile
   983  0002B6  D001               	bra	u126
   984  0002B8                     u125:
   985  0002B8  8883               	bsf	131,4,c	;volatile
   986  0002BA                     u126:
   987  0002BA                     
   988                           ;lcd.c: 94:     PORTDbits.RD5 = 0;
   989  0002BA  9A83               	bcf	131,5,c	;volatile
   990  0002BC                     
   991                           ;lcd.c: 97:     PORTDbits.RD6 = 1;
   992  0002BC  8C83               	bsf	131,6,c	;volatile
   993  0002BE                     
   994                           ;lcd.c: 100:     PORTDbits.RD6 = 0;
   995  0002BE  9C83               	bcf	131,6,c	;volatile
   996  0002C0  0012               	return		;funcret
   997  0002C2                     __end_of_LCDWriteNibble:
   998                           	opt callstack 0
   999                           
  1000 ;; *************** function _BRG9600 *****************
  1001 ;; Defined at:
  1002 ;;		line 10 in file "Recieve.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text10
  1031  0002F6                     __ptext10:
  1032                           	opt callstack 0
  1033  0002F6                     _BRG9600:
  1034                           	opt callstack 29
  1035  0002F6                     
  1036                           ;Recieve.c: 11:     SPEN = 1;
  1037  0002F6  8EAB               	bsf	4011,7,c	;volatile
  1038                           
  1039                           ;Recieve.c: 12:     TXEN = 1;
  1040  0002F8  8AAC               	bsf	4012,5,c	;volatile
  1041                           
  1042                           ;Recieve.c: 13:     SYNC = 0;
  1043  0002FA  98AC               	bcf	4012,4,c	;volatile
  1044                           
  1045                           ;Recieve.c: 14:     BRGH = 0;
  1046  0002FC  94AC               	bcf	4012,2,c	;volatile
  1047                           
  1048                           ;Recieve.c: 15:     BRG16 = 0;
  1049  0002FE  96B8               	bcf	4024,3,c	;volatile
  1050  000300                     
  1051                           ;Recieve.c: 16:     SPBRG = 12;
  1052  000300  0E0C               	movlw	12
  1053  000302  6EAF               	movwf	175,c	;volatile
  1054  000304  0012               	return		;funcret
  1055  000306                     __end_of_BRG9600:
  1056                           	opt callstack 0
  1057                           
  1058 ;; *************** function _rec *****************
  1059 ;; Defined at:
  1060 ;;		line 46 in file "newmain.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:        2 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		Interrupt level 2
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	intcode
  1088  000008                     __pintcode:
  1089                           	opt callstack 0
  1090  000008                     _rec:
  1091                           	opt callstack 27
  1092                           
  1093                           ;incstack = 0
  1094  000008  8213               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1095  00000A  ED97  F000         	call	int_func,f	;refresh shadow registers
  1096                           
  1097                           	psect	intcode_body
  1098  00012E                     __pintcode_body:
  1099                           	opt callstack 27
  1100  00012E                     int_func:
  1101                           	opt callstack 27
  1102  00012E  0006               	pop		; remove dummy address from shadow register refresh
  1103  000130  CFD9 F001          	movff	fsr2l,??_rec
  1104  000134  CFDA F002          	movff	fsr2h,??_rec+1
  1105  000138                     
  1106                           ;newmain.c: 48:     if(RCIF)
  1107  000138  AA9E               	btfss	3998,5,c	;volatile
  1108  00013A  EFA1  F000         	goto	i2u10_41
  1109  00013E  EFA3  F000         	goto	i2u10_40
  1110  000142                     i2u10_41:
  1111  000142  EFC1  F000         	goto	i2l91
  1112  000146                     i2u10_40:
  1113  000146                     
  1114                           ;newmain.c: 49:     {;newmain.c: 50:         if(RCREG!='\0')
  1115  000146  50AE               	movf	174,w,c	;volatile
  1116  000148  B4D8               	btfsc	status,2,c
  1117  00014A  EFA9  F000         	goto	i2u11_41
  1118  00014E  EFAB  F000         	goto	i2u11_40
  1119  000152                     i2u11_41:
  1120  000152  EFB6  F000         	goto	i2l937
  1121  000156                     i2u11_40:
  1122  000156                     
  1123                           ;newmain.c: 51:         {;newmain.c: 52:             array[i]=RCREG;
  1124  000156  0E0E               	movlw	low _array
  1125  000158  240D               	addwf	_i^0,w,c
  1126  00015A  6ED9               	movwf	fsr2l,c
  1127  00015C  6ADA               	clrf	fsr2h,c
  1128  00015E  0E00               	movlw	high _array
  1129  000160  22DA               	addwfc	fsr2h,f,c
  1130  000162  CFAE FFDF          	movff	4014,indf2	;volatile
  1131  000166                     
  1132                           ;newmain.c: 53:             i++;
  1133  000166  2A0D               	incf	_i^0,f,c
  1134                           
  1135                           ;newmain.c: 56:         }
  1136  000168  EFC0  F000         	goto	i2l941
  1137  00016C                     i2l937:
  1138                           
  1139                           ;newmain.c: 58:         {;newmain.c: 59:             array[i]='\0';
  1140  00016C  0E0E               	movlw	low _array
  1141  00016E  240D               	addwf	_i^0,w,c
  1142  000170  6ED9               	movwf	fsr2l,c
  1143  000172  6ADA               	clrf	fsr2h,c
  1144  000174  0E00               	movlw	high _array
  1145  000176  22DA               	addwfc	fsr2h,f,c
  1146  000178  0E00               	movlw	0
  1147  00017A  6EDF               	movwf	indf2,c
  1148  00017C                     
  1149                           ;newmain.c: 60:             i=0;
  1150  00017C  0E00               	movlw	0
  1151  00017E  6E0D               	movwf	_i^0,c
  1152  000180                     i2l941:
  1153                           
  1154                           ;newmain.c: 62:         RCIF=0;
  1155  000180  9A9E               	bcf	3998,5,c	;volatile
  1156  000182                     i2l91:
  1157  000182  C002  FFDA         	movff	??_rec+1,fsr2h
  1158  000186  C001  FFD9         	movff	??_rec,fsr2l
  1159  00018A  9213               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1160  00018C  0011               	retfie		f
  1161  00018E                     __end_of_rec:
  1162                           	opt callstack 0
  1163  0000                     
  1164                           	psect	rparam
  1165  0000                     
  1166                           	psect	temp
  1167  000013                     btemp:
  1168                           	opt callstack 0
  1169  000013                     	ds	1
  1170  0000                     int$flags	set	btemp
  1171  0000                     wtemp8	set	btemp+1
  1172  0000                     ttemp5	set	btemp+1
  1173  0000                     ttemp6	set	btemp+4
  1174  0000                     ttemp7	set	btemp+8
  1175                           tosu	equ	0xFFF
  1176                           tosh	equ	0xFFE
  1177                           tosl	equ	0xFFD
  1178                           stkptr	equ	0xFFC
  1179                           pclatu	equ	0xFFB
  1180                           pclath	equ	0xFFA
  1181                           pcl	equ	0xFF9
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           prodh	equ	0xFF4
  1187                           prodl	equ	0xFF3
  1188                           indf0	equ	0xFEF
  1189                           postinc0	equ	0xFEE
  1190                           postdec0	equ	0xFED
  1191                           preinc0	equ	0xFEC
  1192                           plusw0	equ	0xFEB
  1193                           fsr0h	equ	0xFEA
  1194                           fsr0l	equ	0xFE9
  1195                           wreg	equ	0xFE8
  1196                           indf1	equ	0xFE7
  1197                           postinc1	equ	0xFE6
  1198                           postdec1	equ	0xFE5
  1199                           preinc1	equ	0xFE4
  1200                           plusw1	equ	0xFE3
  1201                           fsr1h	equ	0xFE2
  1202                           fsr1l	equ	0xFE1
  1203                           bsr	equ	0xFE0
  1204                           indf2	equ	0xFDF
  1205                           postinc2	equ	0xFDE
  1206                           postdec2	equ	0xFDD
  1207                           preinc2	equ	0xFDC
  1208                           plusw2	equ	0xFDB
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     12      18
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 5
		 -> array(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_LCDGoto
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _rec in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rec in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rec in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rec in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rec in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rec in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rec in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rec in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rec in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rec in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rec in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rec in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rec in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rec in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rec in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rec in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _rec in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1879
                            _BRG9600
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                            _pwminit
                             _pwmreg
                            _recinit
 ---------------------------------------------------------------------------------
 (1) _recinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmreg                                               4     2      2     120
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pwminit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              6 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            3     1      2     627
                                              6 COMRAM     3     1      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     461
                                              4 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1     671
                                              6 COMRAM     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     461
                                              4 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     394
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _BRG9600                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rec                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BRG9600
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _pwminit
   _pwmreg
   _recinit

 _rec (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      C      12       1       14.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      34        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 28 20:59:19 2019

                      _i 000D           _LCD_Initialize 018E                       l13 01C6  
                     l22 023A                       l16 02C0                       l34 012C  
                     l19 0294              ?_LCDPutChar 0001                       l28 0200  
                     l77 00A0              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l111 0268                      l108 02DE  
                    l132 030C                      l135 0304                      l951 02BE  
                    l943 0298                      l881 0300                      l945 02B0  
                    l961 0230                      l953 0204                      l947 02BA  
                    l955 0212                      l963 026C                      l971 018E  
                    l883 02C2                      l949 02BC                      l957 021C  
                    l965 027A                      l981 01B4                      l973 0196  
                    l885 02CA                      l877 0306                      l879 02F6  
                    l959 0222                      l967 0284                      l991 01E2  
                    l983 01BA                      l975 0198                      l887 02DC  
                    l969 028A                      l993 01E4                      l985 01C0  
                    l977 01A8                      l995 00C0                      l987 01C8  
                    l979 01AE                      _GIE 007F97                      l997 00D0  
                    l989 01D0                      l999 00E4             __CFG_CPB$OFF 000000  
                    u200 0098                      u201 0094                      u130 0200  
                    u131 01FC                      u140 00D0                      u125 02B8  
                    u141 00CC                      u126 02BA                      u150 00E0  
                    u151 00DC                      u160 00F4                      u161 00F0  
                    u217 019E                      u170 004A                      u227 0272  
                    u171 0046                      u180 0064                      u237 0124  
                    u181 0060                      u190 007E                      _PR2 000FCB  
                    u247 020A                      u191 007A                      u257 0228  
           __CFG_CPD$OFF 000000                      _rec 0008          __end_of_BRG9600 0306  
                    wreg 000FE8             __CFG_LVP$OFF 000000          __end_of_LCDGoto 012E  
           __CFG_WDT$OFF 000000                     l1001 00F4                     l1003 0108  
                   l1011 0012                     l1005 0118                     l1021 0022  
                   l1013 0016                     l1007 011E                     l1031 004A  
                   l1023 0026                     l1015 0018                     l1009 023C  
                   l1041 0086                     l1033 0052                     l1025 002A  
                   l1017 001C                     l1043 0098                     l1035 0064  
                   l1027 002E                     l1019 0020                     l1037 006C  
                   l1045 00A0                     l1029 0038                     l1047 00AA  
                   l1039 007E                     ?_rec 0001                     _BRGH 007D62  
                   _CREN 007D5C                     _LATB 000F8A                     _PEIE 007F96  
                   _RCIE 007CED                     _RCIF 007CF5                     i2l91 0182  
                   _TMR2 000FCC                     _SPEN 007D5F                     _TXEN 007D65  
                   _SYNC 007D64                     _main 0012                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0013  
     __size_of_LCDPutCmd 003A                     start 000E       __size_of_LCDPutStr 003A  
          __CFG_IESO$OFF 000000   __end_of_LCD_Initialize 01C8            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_rec 0001              LCDPutCmd@ch 0006  
                  ?_main 0001                    _BRG16 007DC3                    i2l931 0146  
                  i2l941 0180                    i2l933 0156                    i2l935 0166  
                  i2l937 016C                    i2l929 0138                    i2l939 017C  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISB 000F93                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _array 000E          __end_of_recinit 030E  
    __size_of_LCDPutChar 002C                    ttemp5 0014                    ttemp6 0017  
                  ttemp7 001B                    status 000FD8          __end_of_pwminit 02E0  
                  wtemp8 0014          ?_LCD_Initialize 0001          __initialization 02E0  
           __end_of_main 00BE                ??_BRG9600 0003                   ??_main 000D  
          __activetblptr 000000                ??_LCDGoto 0008        __end_of_LCDPutCmd 023C  
           LCDPutChar@ch 0006        __end_of_LCDPutStr 0202                   _CCPR1L 000FBE  
                 _TMR2ON 007E52             LCDPutStr@str 0007                   _TRISC2 007CA2  
         _LCDWriteNibble 0296           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _pwmreg 023C                ??_recinit 0003                ??_pwminit 0003  
 __end_of_LCDWriteNibble 02C2               __accesstop 0080  __end_of__initialization 02EC  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001                LCDGoto@ln 0007  
         __pcstackCOMRAM 0001             ??_LCDPutChar 0005          ?_LCDWriteNibble 0003  
     __end_of_LCDPutChar 0296                  _BRG9600 02F6                  ?_pwmreg 0003  
                _LCDGoto 00BE                  i2u10_40 0146                  i2u10_41 0142  
                i2u11_40 0156                  i2u11_41 0152         ??_LCD_Initialize 0007  
                __Hparam 0000                  __Lparam 0000                  __pcinit 02E0  
                __ramtop 1000                  __ptext0 0012                  __ptext1 0306  
                __ptext2 023C                  __ptext3 02C2                  __ptext4 018E  
                __ptext5 01C8                  __ptext6 026A                  __ptext7 00BE  
                __ptext8 0202                  __ptext9 0296          __size_of_pwmreg 002E  
              _T2CONbits 000FCA             __size_of_rec 0186                  _recinit 0306  
              _LCDPutCmd 0202                  _pwminit 02C2                _LCDPutStr 01C8  
         __pintcode_body 012E     end_of_initialization 02EC                  int_func 012E  
              _PORTDbits 000F83               ?_LCDPutCmd 0001               ?_LCDPutStr 0007  
            _CCP1CONbits 000FBD               LCDGoto@pos 000C               LCDPutStr@i 0009  
         __end_of_pwmreg 026A      start_initialization 02E0         ??_LCDWriteNibble 0004  
            __end_of_rec 018E         __CFG_LPT1OSC$OFF 000000                 ?_BRG9600 0001  
               ??_pwmreg 0005                 ?_LCDGoto 0007              __pbssCOMRAM 000D  
            ??_LCDPutCmd 0005              ??_LCDPutStr 0009        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008         LCDWriteNibble@ch 0004         LCDWriteNibble@rs 0003  
               ?_recinit 0001                 ?_pwminit 0001              _LCDGoto$119 000A  
       __CFG_WDTPS$32768 000000         __size_of_BRG9600 0010         __size_of_LCDGoto 0070  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
__size_of_LCD_Initialize 003A               pwmreg@duty 0003         __size_of_recinit 0008  
               __ptext10 02F6         __size_of_pwminit 001E            __size_of_main 00AC  
               int$flags 0013               _LCDPutChar 026A                 intlevel2 0000  
__size_of_LCDWriteNibble 002C  
