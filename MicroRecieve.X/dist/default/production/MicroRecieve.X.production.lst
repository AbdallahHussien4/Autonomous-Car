

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 28 13:28:36 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     _CCP1CONbits	set	4029
    37  0000                     _CCPR1L	set	4030
    38  0000                     _LATB	set	3978
    39  0000                     _PORTD	set	3971
    40  0000                     _PORTDbits	set	3971
    41  0000                     _PR2	set	4043
    42  0000                     _RCREG	set	4014
    43  0000                     _SPBRG	set	4015
    44  0000                     _TMR2	set	4044
    45  0000                     _TRISB	set	3987
    46  0000                     _TRISD	set	3989
    47  0000                     _BRG16	set	32195
    48  0000                     _BRGH	set	32098
    49  0000                     _CREN	set	32092
    50  0000                     _GIE	set	32663
    51  0000                     _LATB0	set	31824
    52  0000                     _LATB1	set	31825
    53  0000                     _LATB2	set	31826
    54  0000                     _LATB3	set	31827
    55  0000                     _LATC2	set	31834
    56  0000                     _PEIE	set	32662
    57  0000                     _RCIE	set	31981
    58  0000                     _RCIF	set	31989
    59  0000                     _SPEN	set	32095
    60  0000                     _SYNC	set	32100
    61  0000                     _T2CKPS0	set	32336
    62  0000                     _T2CKPS1	set	32337
    63  0000                     _TMR2ON	set	32338
    64  0000                     _TRISC2	set	31906
    65                           
    66                           ; 0 bytes @ 0x35
    67 ;;
    68 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    69 ;;
    70 ;; *************** function _main *****************
    71 ;; Defined at:
    72 ;;		line 8 in file "Recieve.c"
    73 ;; Parameters:    Size  Location     Type
    74 ;;		None
    75 ;; Auto vars:     Size  Location     Type
    76 ;;		None
    77 ;; Return value:  Size  Location     Type
    78 ;;		None               void
    79 ;; Registers used:
    80 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    81 ;; Tracked objects:
    82 ;;		On entry : 0/0
    83 ;;		On exit  : 0/0
    84 ;;		Unchanged: 0/0
    85 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    86 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    87 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    88 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    89 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    90 ;;Total ram usage:        0 bytes
    91 ;; Hardware stack levels required when called:    7
    92 ;; This function calls:
    93 ;;		_BRG9600
    94 ;;		_Delay
    95 ;;		_Duty
    96 ;;		_LCD_Initialize
    97 ;;		_Ports
    98 ;;		_pwmIni
    99 ;;		_recieveIni
   100 ;; This function is called by:
   101 ;;		Startup code after reset
   102 ;; This function uses a non-reentrant model
   103 ;;
   104                           
   105                           	psect	text0
   106  00074A                     __ptext0:
   107                           	opt stack 0
   108  00074A                     _main:
   109                           	opt stack 24
   110                           
   111                           ;Recieve.c: 10: Ports();
   112                           
   113                           ;incstack = 0
   114  00074A  EC4F  F004         	call	_Ports	;wreg free
   115                           
   116                           ;Recieve.c: 11: LCD_Initialize();
   117  00074E  EC32  F003         	call	_LCD_Initialize	;wreg free
   118                           
   119                           ;Recieve.c: 12: pwmIni();
   120  000752  EC45  F004         	call	_pwmIni	;wreg free
   121                           
   122                           ;Recieve.c: 13: recieveIni();
   123  000756  EC5D  F004         	call	_recieveIni	;wreg free
   124                           
   125                           ;Recieve.c: 14: BRG9600();
   126  00075A  EC56  F004         	call	_BRG9600	;wreg free
   127  00075E  D000               	goto	l1659
   128  000760                     l1659:
   129                           
   130                           ;Recieve.c: 17: {
   131                           ;Recieve.c: 19: Duty();
   132  000760  EC0C  F002         	call	_Duty	;wreg free
   133                           
   134                           ;Recieve.c: 20: Delay(0.5);
   135  000764  0E00               	movlw	0
   136  000766  0100               	movlb	0	; () banked
   137  000768  6F83               	movwf	Delay@fac& (0+255),b
   138  00076A  0E00               	movlw	0
   139  00076C  0100               	movlb	0	; () banked
   140  00076E  6F84               	movwf	(Delay@fac+1)& (0+255),b
   141  000770  0E3F               	movlw	63
   142  000772  0100               	movlb	0	; () banked
   143  000774  6F85               	movwf	(Delay@fac+2)& (0+255),b
   144  000776  ECBF  F002         	call	_Delay	;wreg free
   145  00077A  D7F2               	goto	l1659
   146  00077C  EF0C  F000         	goto	start
   147  000780                     __end_of_main:
   148                           	opt stack 0
   149                           
   150                           	psect	cinit
   151  000874                     __pcinit:
   152                           	opt stack 0
   153  000874                     start_initialization:
   154                           	opt stack 0
   155  000874                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Clear objects allocated to COMRAM (50 bytes)
   159  000874  EE00  F036         	lfsr	0,__pbssCOMRAM
   160  000878  0E32               	movlw	50
   161  00087A                     clear_0:
   162  00087A  6AEE               	clrf	postinc0,c
   163  00087C  06E8               	decf	wreg,f,c
   164  00087E  E1FD               	bnz	clear_0
   165  000880                     end_of_initialization:
   166                           	opt stack 0
   167  000880                     __end_of__initialization:
   168                           	opt stack 0
   169  000880  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  000882  6EF8               	movwf	tblptru,c
   171  000884  0100               	movlb	0
   172  000886  EFA5  F003         	goto	_main	;jump to C main() function
   173                           tblptru	equ	0xFF8
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	bssCOMRAM
   178  000036                     __pbssCOMRAM:
   179                           	opt stack 0
   180  000036                     _rec:
   181                           	opt stack 0
   182  000036                     	ds	10
   183  000040                     _t:
   184                           	opt stack 0
   185  000040                     	ds	10
   186  00004A                     _d:
   187                           	opt stack 0
   188  00004A                     	ds	2
   189  00004C                     _i:
   190                           	opt stack 0
   191  00004C                     	ds	1
   192  00004D                     _j:
   193                           	opt stack 0
   194  00004D                     	ds	1
   195  00004E                     _k:
   196                           	opt stack 0
   197  00004E                     	ds	1
   198  00004F                     _dir:
   199                           	opt stack 0
   200  00004F                     	ds	10
   201  000059                     _spd:
   202                           	opt stack 0
   203  000059                     	ds	10
   204  000063                     _duty:
   205                           	opt stack 0
   206  000063                     	ds	5
   207                           tblptru	equ	0xFF8
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	cstackBANK0
   212  000080                     __pcstackBANK0:
   213                           	opt stack 0
   214  000080                     ??___ftge:
   215                           
   216                           ; 0 bytes @ 0x0
   217  000080                     	ds	3
   218  000083                     Delay@fac:
   219                           	opt stack 0
   220                           
   221                           ; 3 bytes @ 0x3
   222  000083                     	ds	3
   223  000086                     ??_Delay:
   224                           
   225                           ; 0 bytes @ 0x6
   226  000086                     	ds	1
   227  000087                     Delay@i:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x7
   231  000087                     	ds	1
   232                           tblptru	equ	0xFF8
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	cstackCOMRAM
   237  000001                     __pcstackCOMRAM:
   238                           	opt stack 0
   239  000001                     i2LCDWriteNibble@rs:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x0
   243  000001                     	ds	1
   244  000002                     i2LCDWriteNibble@ch:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x1
   248  000002                     	ds	1
   249  000003                     ??_LCDPutChar:
   250  000003                     ??i2_LCDPutCmd:
   251                           
   252                           ; 0 bytes @ 0x2
   253  000003                     	ds	1
   254  000004                     LCDPutChar@ch:
   255                           	opt stack 0
   256  000004                     i2LCDPutCmd@ch:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x3
   260  000004                     	ds	1
   261  000005                     LCDGoto@ln:
   262                           	opt stack 0
   263  000005                     LCDPutStr@str:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x4
   267  000005                     	ds	1
   268  000006                     ??_LCDGoto:
   269                           
   270                           ; 0 bytes @ 0x5
   271  000006                     	ds	1
   272  000007                     LCDPutStr@i:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x6
   276  000007                     	ds	1
   277  000008                     _LCDGoto$116:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x7
   281  000008                     	ds	2
   282  00000A                     LCDGoto@pos:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x9
   286  00000A                     	ds	1
   287  00000B                     ??_REC:
   288                           
   289                           ; 0 bytes @ 0xA
   290  00000B                     	ds	14
   291  000019                     ??_isdigit:
   292  000019                     ?___wmul:
   293                           	opt stack 0
   294  000019                     ?___ftpack:
   295                           	opt stack 0
   296  000019                     LCDWriteNibble@rs:
   297                           	opt stack 0
   298  000019                     ___wmul@multiplier:
   299                           	opt stack 0
   300  000019                     ___ftpack@arg:
   301                           	opt stack 0
   302                           
   303                           ; 3 bytes @ 0x18
   304  000019                     	ds	1
   305  00001A                     LCDWriteNibble@ch:
   306                           	opt stack 0
   307  00001A                     _isdigit$536:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x19
   311  00001A                     	ds	1
   312  00001B                     ??_LCDPutCmd:
   313  00001B                     isdigit@c:
   314                           	opt stack 0
   315  00001B                     ___wmul@multiplicand:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x1A
   319  00001B                     	ds	1
   320  00001C                     LCDPutCmd@ch:
   321                           	opt stack 0
   322  00001C                     ___ftpack@exp:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x1B
   326  00001C                     	ds	1
   327  00001D                     ??_LCD_Initialize:
   328  00001D                     ___ftpack@sign:
   329                           	opt stack 0
   330  00001D                     ___wmul@product:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x1C
   334  00001D                     	ds	1
   335  00001E                     ??___ftpack:
   336                           
   337                           ; 0 bytes @ 0x1D
   338  00001E                     	ds	1
   339  00001F                     ?_atoi:
   340                           	opt stack 0
   341  00001F                     atoi@s:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x1E
   345  00001F                     	ds	2
   346  000021                     ??_atoi:
   347  000021                     ?___ftmul:
   348                           	opt stack 0
   349  000021                     ?___lbtoft:
   350                           	opt stack 0
   351  000021                     ___ftmul@f1:
   352                           	opt stack 0
   353                           
   354                           ; 3 bytes @ 0x20
   355  000021                     	ds	2
   356  000023                     atoi@sign:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x22
   360  000023                     	ds	1
   361  000024                     ___lbtoft@c:
   362                           	opt stack 0
   363  000024                     atoi@a:
   364                           	opt stack 0
   365  000024                     ___ftmul@f2:
   366                           	opt stack 0
   367                           
   368                           ; 3 bytes @ 0x23
   369  000024                     	ds	2
   370  000026                     ??_Duty:
   371                           
   372                           ; 0 bytes @ 0x25
   373  000026                     	ds	1
   374  000027                     ??___ftmul:
   375                           
   376                           ; 0 bytes @ 0x26
   377  000027                     	ds	1
   378  000028                     Duty@f:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x27
   382  000028                     	ds	2
   383  00002A                     ___ftmul@exp:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x29
   387  00002A                     	ds	1
   388  00002B                     ___ftmul@f3_as_product:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x2A
   392  00002B                     	ds	3
   393  00002E                     ___ftmul@cntr:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x2D
   397  00002E                     	ds	1
   398  00002F                     ___ftmul@sign:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x2E
   402  00002F                     	ds	1
   403  000030                     ___ftge@ff1:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x2F
   407  000030                     	ds	3
   408  000033                     ___ftge@ff2:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x32
   412  000033                     	ds	3
   413  000036                     tblptru	equ	0xFF8
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           
   417 ;; *************** function _recieveIni *****************
   418 ;; Defined at:
   419 ;;		line 38 in file "Var_Fun.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;		None               void
   426 ;; Registers used:
   427 ;;		None
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; Hardware stack levels required when called:    4
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text1
   448  0008BA                     __ptext1:
   449                           	opt stack 0
   450  0008BA                     _recieveIni:
   451                           	opt stack 26
   452                           
   453                           ;Var_Fun.c: 40: RCIE = 1;
   454                           
   455                           ;incstack = 0
   456  0008BA  8A9D               	bsf	3997,5,c	;volatile
   457                           
   458                           ;Var_Fun.c: 41: RCIF = 0;
   459  0008BC  9A9E               	bcf	3998,5,c	;volatile
   460                           
   461                           ;Var_Fun.c: 42: GIE = 1;
   462  0008BE  8EF2               	bsf	intcon,7,c	;volatile
   463                           
   464                           ;Var_Fun.c: 43: PEIE = 1;
   465  0008C0  8CF2               	bsf	intcon,6,c	;volatile
   466                           
   467                           ;Var_Fun.c: 44: CREN = 1;
   468  0008C2  88AB               	bsf	4011,4,c	;volatile
   469  0008C4  0012               	return		;funcret
   470  0008C6                     __end_of_recieveIni:
   471                           	opt stack 0
   472                           tblptru	equ	0xFF8
   473                           intcon	equ	0xFF2
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           
   477 ;; *************** function _pwmIni *****************
   478 ;; Defined at:
   479 ;;		line 27 in file "Var_Fun.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;		None               void
   486 ;; Registers used:
   487 ;;		wreg, status,2
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508  00088A                     __ptext2:
   509                           	opt stack 0
   510  00088A                     _pwmIni:
   511                           	opt stack 26
   512                           
   513                           ;Var_Fun.c: 30: TMR2=0;
   514                           
   515                           ;incstack = 0
   516  00088A  0E00               	movlw	0
   517  00088C  6ECC               	movwf	4044,c	;volatile
   518                           
   519                           ;Var_Fun.c: 31: PR2=0xFF;
   520  00088E  68CB               	setf	4043,c	;volatile
   521                           
   522                           ;Var_Fun.c: 32: CCP1CONbits.CCP1M=12;
   523  000890  50BD               	movf	4029,w,c	;volatile
   524  000892  0BF0               	andlw	-16
   525  000894  090C               	iorlw	12
   526  000896  6EBD               	movwf	4029,c	;volatile
   527                           
   528                           ;Var_Fun.c: 33: T2CKPS1=1;
   529  000898  82CA               	bsf	4042,1,c	;volatile
   530                           
   531                           ;Var_Fun.c: 34: T2CKPS0=1;
   532  00089A  80CA               	bsf	4042,0,c	;volatile
   533  00089C  0012               	return		;funcret
   534  00089E                     __end_of_pwmIni:
   535                           	opt stack 0
   536                           tblptru	equ	0xFF8
   537                           intcon	equ	0xFF2
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           
   541 ;; *************** function _Ports *****************
   542 ;; Defined at:
   543 ;;		line 55 in file "Var_Fun.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;		None               void
   550 ;; Registers used:
   551 ;;		wreg, status,2
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    4
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text3
   572  00089E                     __ptext3:
   573                           	opt stack 0
   574  00089E                     _Ports:
   575                           	opt stack 26
   576                           
   577                           ;Var_Fun.c: 57: TRISC2=0;
   578                           
   579                           ;incstack = 0
   580  00089E  9494               	bcf	3988,2,c	;volatile
   581                           
   582                           ;Var_Fun.c: 58: LATC2=0;
   583  0008A0  948B               	bcf	3979,2,c	;volatile
   584                           
   585                           ;Var_Fun.c: 59: TRISB=0x00;
   586  0008A2  0E00               	movlw	0
   587  0008A4  6E93               	movwf	3987,c	;volatile
   588                           
   589                           ;Var_Fun.c: 60: LATB=0x00;
   590  0008A6  0E00               	movlw	0
   591  0008A8  6E8A               	movwf	3978,c	;volatile
   592  0008AA  0012               	return		;funcret
   593  0008AC                     __end_of_Ports:
   594                           	opt stack 0
   595                           tblptru	equ	0xFF8
   596                           intcon	equ	0xFF2
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           
   600 ;; *************** function _LCD_Initialize *****************
   601 ;; Defined at:
   602 ;;		line 46 in file "lcd.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;		None               void
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    6
   623 ;; This function calls:
   624 ;;		_LCDPutCmd
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text4
   631  000664                     __ptext4:
   632                           	opt stack 0
   633  000664                     _LCD_Initialize:
   634                           	opt stack 24
   635                           
   636                           ;lcd.c: 49: PORTD = 0;
   637                           
   638                           ;incstack = 0
   639  000664  0E00               	movlw	0
   640  000666  6E83               	movwf	3971,c	;volatile
   641                           
   642                           ;lcd.c: 51: TRISD = 0x00;
   643  000668  0E00               	movlw	0
   644  00066A  6E95               	movwf	3989,c	;volatile
   645                           
   646                           ;lcd.c: 54: PORTDbits.RD7 = 1;
   647  00066C  8E83               	bsf	3971,7,c	;volatile
   648                           
   649                           ;lcd.c: 57: _delay((unsigned long)((15)*(8e6/4000.0)));
   650  00066E  0E27               	movlw	39
   651  000670  6E1D               	movwf	??_LCD_Initialize& (0+255),c
   652  000672  0EF5               	movlw	245
   653  000674                     u957:
   654  000674  2EE8               	decfsz	wreg,f,c
   655  000676  D7FE               	goto	u957
   656  000678  2E1D               	decfsz	??_LCD_Initialize& (0+255),f,c
   657  00067A  D7FC               	goto	u957
   658  00067C  F000               	nop	
   659                           
   660                           ;lcd.c: 60: LCDPutCmd(0x32);
   661  00067E  0E32               	movlw	50
   662  000680  EC4F  F003         	call	_LCDPutCmd
   663                           
   664                           ;lcd.c: 63: LCDPutCmd(0x28);
   665  000684  0E28               	movlw	40
   666  000686  EC4F  F003         	call	_LCDPutCmd
   667                           
   668                           ;lcd.c: 66: LCDPutCmd(0x0C);
   669  00068A  0E0C               	movlw	12
   670  00068C  EC4F  F003         	call	_LCDPutCmd
   671                           
   672                           ;lcd.c: 68: LCDPutCmd(0x01);
   673  000690  0E01               	movlw	1
   674  000692  EC4F  F003         	call	_LCDPutCmd
   675                           
   676                           ;lcd.c: 71: LCDPutCmd(0x06);
   677  000696  0E06               	movlw	6
   678  000698  EC4F  F003         	call	_LCDPutCmd
   679  00069C  0012               	return		;funcret
   680  00069E                     __end_of_LCD_Initialize:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           intcon	equ	0xFF2
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           
   687 ;; *************** function _LCDPutCmd *****************
   688 ;; Defined at:
   689 ;;		line 118 in file "lcd.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  ch              1    wreg     unsigned char 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  ch              1   27[COMRAM] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;		None               void
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;Total ram usage:        2 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    5
   710 ;; This function calls:
   711 ;;		_LCDWriteNibble
   712 ;; This function is called by:
   713 ;;		_LCD_Initialize
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text5
   718  00069E                     __ptext5:
   719                           	opt stack 0
   720  00069E                     _LCDPutCmd:
   721                           	opt stack 24
   722                           
   723                           ;incstack = 0
   724                           ;LCDPutCmd@ch stored from wreg
   725  00069E  6E1C               	movwf	LCDPutCmd@ch,c
   726                           
   727                           ;lcd.c: 120: _delay((unsigned long)((5)*(8e6/4000.0)));
   728  0006A0  0E0D               	movlw	13
   729  0006A2  6E1B               	movwf	??_LCDPutCmd& (0+255),c
   730  0006A4  0EFC               	movlw	252
   731  0006A6                     u967:
   732  0006A6  2EE8               	decfsz	wreg,f,c
   733  0006A8  D7FE               	goto	u967
   734  0006AA  2E1B               	decfsz	??_LCDPutCmd& (0+255),f,c
   735  0006AC  D7FC               	goto	u967
   736                           
   737                           ;lcd.c: 123: LCDWriteNibble(ch,0);
   738  0006AE  0E00               	movlw	0
   739  0006B0  6E19               	movwf	LCDWriteNibble@rs,c
   740  0006B2  501C               	movf	LCDPutCmd@ch,w,c
   741  0006B4  ECC0  F003         	call	_LCDWriteNibble
   742                           
   743                           ;lcd.c: 126: ch = (ch << 4);
   744  0006B8  381C               	swapf	LCDPutCmd@ch,w,c
   745  0006BA  0BF0               	andlw	240
   746  0006BC  6E1C               	movwf	LCDPutCmd@ch,c
   747                           
   748                           ;lcd.c: 128: _delay((unsigned long)((1)*(8e6/4000.0)));
   749  0006BE  0E03               	movlw	3
   750  0006C0  6E1B               	movwf	??_LCDPutCmd& (0+255),c
   751  0006C2  0E98               	movlw	152
   752  0006C4                     u977:
   753  0006C4  2EE8               	decfsz	wreg,f,c
   754  0006C6  D7FE               	goto	u977
   755  0006C8  2E1B               	decfsz	??_LCDPutCmd& (0+255),f,c
   756  0006CA  D7FC               	goto	u977
   757                           
   758                           ;lcd.c: 131: LCDWriteNibble(ch,0);
   759  0006CC  0E00               	movlw	0
   760  0006CE  6E19               	movwf	LCDWriteNibble@rs,c
   761  0006D0  501C               	movf	LCDPutCmd@ch,w,c
   762  0006D2  ECC0  F003         	call	_LCDWriteNibble
   763  0006D6  0012               	return		;funcret
   764  0006D8                     __end_of_LCDPutCmd:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           intcon	equ	0xFF2
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           
   771 ;; *************** function _LCDWriteNibble *****************
   772 ;; Defined at:
   773 ;;		line 76 in file "lcd.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  ch              1    wreg     unsigned char 
   776 ;;  rs              1   24[COMRAM] unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  ch              1   25[COMRAM] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    4
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_LCDPutCmd
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text6
   803  000780                     __ptext6:
   804                           	opt stack 0
   805  000780                     _LCDWriteNibble:
   806                           	opt stack 24
   807                           
   808                           ;incstack = 0
   809                           ;LCDWriteNibble@ch stored from wreg
   810  000780  6E1A               	movwf	LCDWriteNibble@ch,c
   811                           
   812                           ;lcd.c: 79: ch = (ch >> 4);
   813  000782  381A               	swapf	LCDWriteNibble@ch,w,c
   814  000784  0B0F               	andlw	15
   815  000786  6E1A               	movwf	LCDWriteNibble@ch,c
   816                           
   817                           ;lcd.c: 82: ch = (ch & 0x0F);
   818  000788  501A               	movf	LCDWriteNibble@ch,w,c
   819  00078A  0B0F               	andlw	15
   820  00078C  6E1A               	movwf	LCDWriteNibble@ch,c
   821                           
   822                           ;lcd.c: 85: PORTD = (PORTD & 0xF0);
   823  00078E  5083               	movf	3971,w,c	;volatile
   824  000790  0BF0               	andlw	240
   825  000792  6E83               	movwf	3971,c	;volatile
   826                           
   827                           ;lcd.c: 88: PORTD = (PORTD | ch);
   828  000794  5083               	movf	3971,w,c	;volatile
   829  000796  101A               	iorwf	LCDWriteNibble@ch,w,c
   830  000798  6E83               	movwf	3971,c	;volatile
   831                           
   832                           ;lcd.c: 91: PORTDbits.RD4 = rs;
   833  00079A  B019               	btfsc	LCDWriteNibble@rs,0,c
   834  00079C  D002               	bra	u395
   835  00079E  9883               	bcf	3971,4,c	;volatile
   836  0007A0  D001               	bra	u396
   837  0007A2                     u395:
   838  0007A2  8883               	bsf	3971,4,c	;volatile
   839  0007A4                     u396:
   840                           
   841                           ;lcd.c: 94: PORTDbits.RD5 = 0;
   842  0007A4  9A83               	bcf	3971,5,c	;volatile
   843                           
   844                           ;lcd.c: 97: PORTDbits.RD6 = 1;
   845  0007A6  8C83               	bsf	3971,6,c	;volatile
   846                           
   847                           ;lcd.c: 100: PORTDbits.RD6 = 0;
   848  0007A8  9C83               	bcf	3971,6,c	;volatile
   849  0007AA  0012               	return		;funcret
   850  0007AC                     __end_of_LCDWriteNibble:
   851                           	opt stack 0
   852                           tblptru	equ	0xFF8
   853                           intcon	equ	0xFF2
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           
   857 ;; *************** function _Duty *****************
   858 ;; Defined at:
   859 ;;		line 13 in file "Var_Fun.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  f               1   39[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;		None               void
   866 ;; Registers used:
   867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        3 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    6
   880 ;; This function calls:
   881 ;;		_atoi
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text7
   888  000418                     __ptext7:
   889                           	opt stack 0
   890  000418                     _Duty:
   891                           	opt stack 24
   892                           
   893                           ;Var_Fun.c: 15: char f;
   894                           ;Var_Fun.c: 16: for( f=0; spd[f+4]!='\0'; f++)
   895                           
   896                           ;incstack = 0
   897  000418  0E00               	movlw	0
   898  00041A  6E28               	movwf	Duty@f,c
   899  00041C  D019               	goto	l1451
   900  00041E                     l1447:
   901                           
   902                           ;Var_Fun.c: 17: duty[f]=spd[f+4];
   903  00041E  5028               	movf	Duty@f,w,c
   904  000420  6E26               	movwf	??_Duty& (0+255),c
   905  000422  6A27               	clrf	(??_Duty+1)& (0+255),c
   906  000424  0E04               	movlw	4
   907  000426  2626               	addwf	??_Duty,f,c
   908  000428  0E00               	movlw	0
   909  00042A  2227               	addwfc	??_Duty+1,f,c
   910  00042C  0E59               	movlw	low _spd
   911  00042E  2426               	addwf	??_Duty,w,c
   912  000430  6ED9               	movwf	fsr2l,c
   913  000432  0E00               	movlw	high _spd
   914  000434  2027               	addwfc	??_Duty+1,w,c
   915  000436  6EDA               	movwf	fsr2h,c
   916  000438  5028               	movf	Duty@f,w,c
   917  00043A  0D01               	mullw	1
   918  00043C  0E63               	movlw	low _duty
   919  00043E  24F3               	addwf	prodl,w,c
   920  000440  6EE1               	movwf	fsr1l,c
   921  000442  0E00               	movlw	high _duty
   922  000444  20F4               	addwfc	prodh,w,c
   923  000446  6EE2               	movwf	fsr1h,c
   924  000448  CFDF FFE7          	movff	indf2,indf1
   925  00044C  2A28               	incf	Duty@f,f,c
   926  00044E  D000               	goto	l1451
   927  000450                     l1451:
   928  000450  5028               	movf	Duty@f,w,c
   929  000452  6E26               	movwf	??_Duty& (0+255),c
   930  000454  6A27               	clrf	(??_Duty+1)& (0+255),c
   931  000456  0E04               	movlw	4
   932  000458  2626               	addwf	??_Duty,f,c
   933  00045A  0E00               	movlw	0
   934  00045C  2227               	addwfc	??_Duty+1,f,c
   935  00045E  0E59               	movlw	low _spd
   936  000460  2426               	addwf	??_Duty,w,c
   937  000462  6ED9               	movwf	fsr2l,c
   938  000464  0E00               	movlw	high _spd
   939  000466  2027               	addwfc	??_Duty+1,w,c
   940  000468  6EDA               	movwf	fsr2h,c
   941  00046A  50DF               	movf	indf2,w,c
   942  00046C  A4D8               	btfss	status,2,c
   943  00046E  D7D7               	goto	l1447
   944                           
   945                           ;Var_Fun.c: 19: duty[f]='\0';
   946  000470  5028               	movf	Duty@f,w,c
   947  000472  0D01               	mullw	1
   948  000474  0E63               	movlw	low _duty
   949  000476  24F3               	addwf	prodl,w,c
   950  000478  6ED9               	movwf	fsr2l,c
   951  00047A  0E00               	movlw	high _duty
   952  00047C  20F4               	addwfc	prodh,w,c
   953  00047E  6EDA               	movwf	fsr2h,c
   954  000480  0E00               	movlw	0
   955  000482  6EDF               	movwf	indf2,c
   956                           
   957                           ;Var_Fun.c: 20: d=atoi(duty);
   958  000484  0E63               	movlw	low _duty
   959  000486  6E1F               	movwf	atoi@s,c
   960  000488  0E00               	movlw	high _duty
   961  00048A  6E20               	movwf	atoi@s+1,c
   962  00048C  EC3F  F001         	call	_atoi	;wreg free
   963  000490  C01F  F04A         	movff	?_atoi,_d
   964  000494  C020  F04B         	movff	?_atoi+1,_d+1
   965                           
   966                           ;Var_Fun.c: 21: TMR2ON=1;
   967  000498  84CA               	bsf	4042,2,c	;volatile
   968                           
   969                           ;Var_Fun.c: 22: CCP1CONbits.DC1B=d&0x0003;
   970  00049A  C04A  F026         	movff	_d,??_Duty
   971  00049E  0E03               	movlw	3
   972  0004A0  1626               	andwf	??_Duty,f,c
   973  0004A2  3A26               	swapf	??_Duty,f,c
   974  0004A4  50BD               	movf	4029,w,c	;volatile
   975  0004A6  1826               	xorwf	??_Duty,w,c
   976  0004A8  0BCF               	andlw	-49
   977  0004AA  1826               	xorwf	??_Duty,w,c
   978  0004AC  6EBD               	movwf	4029,c	;volatile
   979                           
   980                           ;Var_Fun.c: 23: CCPR1L=(d>>2)&0x00FF;
   981  0004AE  C04A  F026         	movff	_d,??_Duty
   982  0004B2  C04B  F027         	movff	_d+1,??_Duty+1
   983  0004B6  90D8               	bcf	status,0,c
   984  0004B8  3227               	rrcf	??_Duty+1,f,c
   985  0004BA  3226               	rrcf	??_Duty,f,c
   986  0004BC  90D8               	bcf	status,0,c
   987  0004BE  3227               	rrcf	??_Duty+1,f,c
   988  0004C0  3226               	rrcf	??_Duty,f,c
   989  0004C2  5026               	movf	??_Duty,w,c
   990  0004C4  6EBE               	movwf	4030,c	;volatile
   991                           
   992                           ;Var_Fun.c: 24: _delay((unsigned long)((2)*(8e6/4000.0)));
   993  0004C6  0E06               	movlw	6
   994  0004C8  6E26               	movwf	??_Duty& (0+255),c
   995  0004CA  0E30               	movlw	48
   996  0004CC                     u987:
   997  0004CC  2EE8               	decfsz	wreg,f,c
   998  0004CE  D7FE               	goto	u987
   999  0004D0  2E26               	decfsz	??_Duty& (0+255),f,c
  1000  0004D2  D7FC               	goto	u987
  1001  0004D4  D000               	nop2	
  1002  0004D6  0012               	return		;funcret
  1003  0004D8                     __end_of_Duty:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           prodh	equ	0xFF4
  1007                           prodl	equ	0xFF3
  1008                           intcon	equ	0xFF2
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           indf1	equ	0xFE7
  1012                           fsr1h	equ	0xFE2
  1013                           fsr1l	equ	0xFE1
  1014                           indf2	equ	0xFDF
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _atoi *****************
  1020 ;; Defined at:
  1021 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\atoi.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  s               2   30[COMRAM] PTR const unsigned char 
  1024 ;;		 -> duty(5), 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  a               2   35[COMRAM] int 
  1027 ;;  sign            1   34[COMRAM] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  2   30[COMRAM] int 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;Total ram usage:        7 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    5
  1044 ;; This function calls:
  1045 ;;		___wmul
  1046 ;;		_isdigit
  1047 ;; This function is called by:
  1048 ;;		_Duty
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text8
  1053  00027E                     __ptext8:
  1054                           	opt stack 0
  1055  00027E                     _atoi:
  1056                           	opt stack 24
  1057                           
  1058                           ;incstack = 0
  1059  00027E  D003               	goto	l1303
  1060  000280                     l1301:
  1061  000280  4A1F               	infsnz	atoi@s,f,c
  1062  000282  2A20               	incf	atoi@s+1,f,c
  1063  000284  D000               	goto	l1303
  1064  000286                     l1303:
  1065  000286  C01F  FFD9         	movff	atoi@s,fsr2l
  1066  00028A  C020  FFDA         	movff	atoi@s+1,fsr2h
  1067  00028E  0E20               	movlw	32
  1068  000290  18DE               	xorwf	postinc2,w,c
  1069  000292  B4D8               	btfsc	status,2,c
  1070  000294  D7F5               	goto	l1301
  1071  000296  C01F  FFD9         	movff	atoi@s,fsr2l
  1072  00029A  C020  FFDA         	movff	atoi@s+1,fsr2h
  1073  00029E  0E09               	movlw	9
  1074  0002A0  18DE               	xorwf	postinc2,w,c
  1075  0002A2  B4D8               	btfsc	status,2,c
  1076  0002A4  D7ED               	goto	l1301
  1077  0002A6  0E00               	movlw	0
  1078  0002A8  6E25               	movwf	atoi@a+1,c
  1079  0002AA  0E00               	movlw	0
  1080  0002AC  6E24               	movwf	atoi@a,c
  1081  0002AE  0E00               	movlw	0
  1082  0002B0  6E23               	movwf	atoi@sign,c
  1083  0002B2  C01F  FFD9         	movff	atoi@s,fsr2l
  1084  0002B6  C020  FFDA         	movff	atoi@s+1,fsr2h
  1085  0002BA  0E2D               	movlw	45
  1086  0002BC  18DE               	xorwf	postinc2,w,c
  1087  0002BE  A4D8               	btfss	status,2,c
  1088  0002C0  D002               	goto	l1313
  1089  0002C2  2A23               	incf	atoi@sign,f,c
  1090  0002C4  D025               	goto	l1319
  1091  0002C6                     l1313:
  1092  0002C6  C01F  FFD9         	movff	atoi@s,fsr2l
  1093  0002CA  C020  FFDA         	movff	atoi@s+1,fsr2h
  1094  0002CE  0E2B               	movlw	43
  1095  0002D0  18DE               	xorwf	postinc2,w,c
  1096  0002D2  A4D8               	btfss	status,2,c
  1097  0002D4  D020               	goto	l1321
  1098  0002D6  D01C               	goto	l1319
  1099  0002D8  D01E               	goto	l1321
  1100  0002DA                     l1317:
  1101  0002DA  C024  F019         	movff	atoi@a,___wmul@multiplier
  1102  0002DE  C025  F01A         	movff	atoi@a+1,___wmul@multiplier+1
  1103  0002E2  0E00               	movlw	0
  1104  0002E4  6E1C               	movwf	___wmul@multiplicand+1,c
  1105  0002E6  0E0A               	movlw	10
  1106  0002E8  6E1B               	movwf	___wmul@multiplicand,c
  1107  0002EA  EC02  F004         	call	___wmul	;wreg free
  1108  0002EE  C01F  FFD9         	movff	atoi@s,fsr2l
  1109  0002F2  C020  FFDA         	movff	atoi@s+1,fsr2h
  1110  0002F6  50DF               	movf	indf2,w,c
  1111  0002F8  6E21               	movwf	??_atoi& (0+255),c
  1112  0002FA  6A22               	clrf	(??_atoi+1)& (0+255),c
  1113  0002FC  5019               	movf	?___wmul,w,c
  1114  0002FE  2621               	addwf	??_atoi,f,c
  1115  000300  501A               	movf	?___wmul+1,w,c
  1116  000302  2222               	addwfc	??_atoi+1,f,c
  1117  000304  0ED0               	movlw	208
  1118  000306  2421               	addwf	??_atoi,w,c
  1119  000308  6E24               	movwf	atoi@a,c
  1120  00030A  0EFF               	movlw	255
  1121  00030C  2022               	addwfc	??_atoi+1,w,c
  1122  00030E  6E25               	movwf	atoi@a+1,c
  1123  000310                     l1319:
  1124  000310  4A1F               	infsnz	atoi@s,f,c
  1125  000312  2A20               	incf	atoi@s+1,f,c
  1126  000314  D000               	goto	l1321
  1127  000316                     l1321:
  1128  000316  C01F  FFD9         	movff	atoi@s,fsr2l
  1129  00031A  C020  FFDA         	movff	atoi@s+1,fsr2h
  1130  00031E  50DF               	movf	indf2,w,c
  1131  000320  EC29  F004         	call	_isdigit
  1132  000324  B0D8               	btfsc	status,0,c
  1133  000326  D7D9               	goto	l1317
  1134  000328  5023               	movf	atoi@sign,w,c
  1135  00032A  B4D8               	btfsc	status,2,c
  1136  00032C  D00D               	goto	l394
  1137  00032E  C024  F021         	movff	atoi@a,??_atoi
  1138  000332  C025  F022         	movff	atoi@a+1,??_atoi+1
  1139  000336  1E21               	comf	??_atoi,f,c
  1140  000338  1E22               	comf	??_atoi+1,f,c
  1141  00033A  4A21               	infsnz	??_atoi,f,c
  1142  00033C  2A22               	incf	??_atoi+1,f,c
  1143  00033E  C021  F01F         	movff	??_atoi,?_atoi
  1144  000342  C022  F020         	movff	??_atoi+1,?_atoi+1
  1145  000346  D004               	goto	l395
  1146  000348                     l394:
  1147  000348  C024  F01F         	movff	atoi@a,?_atoi
  1148  00034C  C025  F020         	movff	atoi@a+1,?_atoi+1
  1149  000350                     l395:
  1150  000350  0012               	return		;funcret
  1151  000352                     __end_of_atoi:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           prodh	equ	0xFF4
  1155                           prodl	equ	0xFF3
  1156                           intcon	equ	0xFF2
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           indf1	equ	0xFE7
  1160                           fsr1h	equ	0xFE2
  1161                           fsr1l	equ	0xFE1
  1162                           indf2	equ	0xFDF
  1163                           postinc2	equ	0xFDE
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function _isdigit *****************
  1169 ;; Defined at:
  1170 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  c               1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  c               1   26[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;		None               void
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        3 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    4
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_atoi
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text9
  1199  000852                     __ptext9:
  1200                           	opt stack 0
  1201  000852                     _isdigit:
  1202                           	opt stack 24
  1203                           
  1204                           ;incstack = 0
  1205                           ;isdigit@c stored from wreg
  1206  000852  6E1B               	movwf	isdigit@c,c
  1207  000854  0E00               	movlw	0
  1208  000856  6E1A               	movwf	_isdigit$536,c
  1209  000858  0E3A               	movlw	58
  1210  00085A  601B               	cpfslt	isdigit@c,c
  1211  00085C  D006               	goto	l1267
  1212  00085E  0E2F               	movlw	47
  1213  000860  641B               	cpfsgt	isdigit@c,c
  1214  000862  D003               	goto	l1267
  1215  000864  0E01               	movlw	1
  1216  000866  6E1A               	movwf	_isdigit$536,c
  1217  000868  D000               	goto	l1267
  1218  00086A                     l1267:
  1219  00086A  C01A  F019         	movff	_isdigit$536,??_isdigit
  1220  00086E  3019               	rrcf	??_isdigit,w,c
  1221  000870  D000               	goto	l658
  1222  000872                     l658:
  1223  000872  0012               	return		;funcret
  1224  000874                     __end_of_isdigit:
  1225                           	opt stack 0
  1226                           tblptru	equ	0xFF8
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           intcon	equ	0xFF2
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           indf1	equ	0xFE7
  1233                           fsr1h	equ	0xFE2
  1234                           fsr1l	equ	0xFE1
  1235                           indf2	equ	0xFDF
  1236                           postinc2	equ	0xFDE
  1237                           fsr2h	equ	0xFDA
  1238                           fsr2l	equ	0xFD9
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function ___wmul *****************
  1242 ;; Defined at:
  1243 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  multiplier      2   24[COMRAM] unsigned int 
  1246 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  product         2   28[COMRAM] unsigned int 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  2   24[COMRAM] unsigned int 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, prodl, prodh
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;Total ram usage:        6 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    4
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_atoi
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text10
  1273  000804                     __ptext10:
  1274                           	opt stack 0
  1275  000804                     ___wmul:
  1276                           	opt stack 24
  1277                           
  1278                           ;incstack = 0
  1279  000804  5019               	movf	___wmul@multiplier,w,c
  1280  000806  021B               	mulwf	___wmul@multiplicand,c
  1281  000808  CFF3 F01D          	movff	prodl,___wmul@product
  1282  00080C  CFF4 F01E          	movff	prodh,___wmul@product+1
  1283  000810  5019               	movf	___wmul@multiplier,w,c
  1284  000812  021C               	mulwf	___wmul@multiplicand+1,c
  1285  000814  50F3               	movf	prodl,w,c
  1286  000816  261E               	addwf	___wmul@product+1,f,c
  1287  000818  501A               	movf	___wmul@multiplier+1,w,c
  1288  00081A  021B               	mulwf	___wmul@multiplicand,c
  1289  00081C  50F3               	movf	prodl,w,c
  1290  00081E  261E               	addwf	___wmul@product+1,f,c
  1291  000820  C01D  F019         	movff	___wmul@product,?___wmul
  1292  000824  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1293  000828  D000               	goto	l212
  1294  00082A                     l212:
  1295  00082A  0012               	return		;funcret
  1296  00082C                     __end_of___wmul:
  1297                           	opt stack 0
  1298                           tblptru	equ	0xFF8
  1299                           prodh	equ	0xFF4
  1300                           prodl	equ	0xFF3
  1301                           intcon	equ	0xFF2
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           indf1	equ	0xFE7
  1305                           fsr1h	equ	0xFE2
  1306                           fsr1l	equ	0xFE1
  1307                           indf2	equ	0xFDF
  1308                           postinc2	equ	0xFDE
  1309                           fsr2h	equ	0xFDA
  1310                           fsr2l	equ	0xFD9
  1311                           status	equ	0xFD8
  1312                           
  1313 ;; *************** function _Delay *****************
  1314 ;; Defined at:
  1315 ;;		line 62 in file "Var_Fun.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  fac             3    3[BANK0 ] float 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  i               1    7[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;		None               void
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1329 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;Total ram usage:        5 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    6
  1336 ;; This function calls:
  1337 ;;		___ftge
  1338 ;;		___ftmul
  1339 ;;		___lbtoft
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text11
  1346  00057E                     __ptext11:
  1347                           	opt stack 0
  1348  00057E                     _Delay:
  1349                           	opt stack 24
  1350                           
  1351                           ;Var_Fun.c: 64: for(char i=0; i<20*fac; i++)
  1352                           
  1353                           ;incstack = 0
  1354  00057E  0E00               	movlw	0
  1355  000580  0100               	movlb	0	; () banked
  1356  000582  6F87               	movwf	Delay@i& (0+255),b
  1357  000584  D00B               	goto	l1647
  1358  000586                     l1643:
  1359                           
  1360                           ;Var_Fun.c: 65: _delay((unsigned long)((50)*(8e6/4000.0)));
  1361  000586  0E82               	movlw	130
  1362  000588  0100               	movlb	0	; () banked
  1363  00058A  6F86               	movwf	??_Delay& (0+255),b
  1364  00058C  0EDE               	movlw	222
  1365  00058E                     u997:
  1366  00058E  2EE8               	decfsz	wreg,f,c
  1367  000590  D7FE               	goto	u997
  1368  000592  2F86               	decfsz	??_Delay& (0+255),f,b
  1369  000594  D7FC               	goto	u997
  1370  000596  0100               	movlb	0	; () banked
  1371  000598  2B87               	incf	Delay@i& (0+255),f,b
  1372  00059A  D000               	goto	l1647
  1373  00059C                     l1647:
  1374                           
  1375                           ; BSR set to: 0
  1376  00059C  0100               	movlb	0	; () banked
  1377  00059E  5187               	movf	Delay@i& (0+255),w,b
  1378  0005A0  EC16  F004         	call	___lbtoft
  1379  0005A4  C021  F030         	movff	?___lbtoft,___ftge@ff1
  1380  0005A8  C022  F031         	movff	?___lbtoft+1,___ftge@ff1+1
  1381  0005AC  C023  F032         	movff	?___lbtoft+2,___ftge@ff1+2
  1382  0005B0  0E00               	movlw	0
  1383  0005B2  6E24               	movwf	___ftmul@f2,c
  1384  0005B4  0EA0               	movlw	160
  1385  0005B6  6E25               	movwf	___ftmul@f2+1,c
  1386  0005B8  0E41               	movlw	65
  1387  0005BA  6E26               	movwf	___ftmul@f2+2,c
  1388  0005BC  C083  F021         	movff	Delay@fac,___ftmul@f1
  1389  0005C0  C084  F022         	movff	Delay@fac+1,___ftmul@f1+1
  1390  0005C4  C085  F023         	movff	Delay@fac+2,___ftmul@f1+2
  1391  0005C8  ECC3  F000         	call	___ftmul	;wreg free
  1392  0005CC  C021  F033         	movff	?___ftmul,___ftge@ff2
  1393  0005D0  C022  F034         	movff	?___ftmul+1,___ftge@ff2+1
  1394  0005D4  C023  F035         	movff	?___ftmul+2,___ftge@ff2+2
  1395  0005D8  EC6C  F002         	call	___ftge	;wreg free
  1396  0005DC  A0D8               	btfss	status,0,c
  1397  0005DE  D7D3               	goto	l1643
  1398  0005E0  0012               	return		;funcret
  1399  0005E2                     __end_of_Delay:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           prodh	equ	0xFF4
  1403                           prodl	equ	0xFF3
  1404                           intcon	equ	0xFF2
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           indf1	equ	0xFE7
  1408                           fsr1h	equ	0xFE2
  1409                           fsr1l	equ	0xFE1
  1410                           indf2	equ	0xFDF
  1411                           postinc2	equ	0xFDE
  1412                           fsr2h	equ	0xFDA
  1413                           fsr2l	equ	0xFD9
  1414                           status	equ	0xFD8
  1415                           
  1416 ;; *************** function ___lbtoft *****************
  1417 ;; Defined at:
  1418 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  c               1    wreg     unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  c               1   35[COMRAM] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  3   32[COMRAM] float 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1432 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;Total ram usage:        4 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    5
  1439 ;; This function calls:
  1440 ;;		___ftpack
  1441 ;; This function is called by:
  1442 ;;		_Delay
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text12
  1447  00082C                     __ptext12:
  1448                           	opt stack 0
  1449  00082C                     ___lbtoft:
  1450                           	opt stack 24
  1451                           
  1452                           ;incstack = 0
  1453                           ;___lbtoft@c stored from wreg
  1454  00082C  6E24               	movwf	___lbtoft@c,c
  1455  00082E  5024               	movf	___lbtoft@c,w,c
  1456  000830  6E19               	movwf	___ftpack@arg,c
  1457  000832  6A1A               	clrf	___ftpack@arg+1,c
  1458  000834  6A1B               	clrf	___ftpack@arg+2,c
  1459  000836  0E8E               	movlw	142
  1460  000838  6E1C               	movwf	___ftpack@exp,c
  1461  00083A  0E00               	movlw	0
  1462  00083C  6E1D               	movwf	___ftpack@sign,c
  1463  00083E  ECA9  F001         	call	___ftpack	;wreg free
  1464  000842  C019  F021         	movff	?___ftpack,?___lbtoft
  1465  000846  C01A  F022         	movff	?___ftpack+1,?___lbtoft+1
  1466  00084A  C01B  F023         	movff	?___ftpack+2,?___lbtoft+2
  1467  00084E  D000               	goto	l684
  1468  000850                     l684:
  1469  000850  0012               	return		;funcret
  1470  000852                     __end_of___lbtoft:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           prodh	equ	0xFF4
  1474                           prodl	equ	0xFF3
  1475                           intcon	equ	0xFF2
  1476                           postinc0	equ	0xFEE
  1477                           wreg	equ	0xFE8
  1478                           indf1	equ	0xFE7
  1479                           fsr1h	equ	0xFE2
  1480                           fsr1l	equ	0xFE1
  1481                           indf2	equ	0xFDF
  1482                           postinc2	equ	0xFDE
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function ___ftmul *****************
  1488 ;; Defined at:
  1489 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  f1              3   32[COMRAM] float 
  1492 ;;  f2              3   35[COMRAM] float 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  f3_as_produc    3   42[COMRAM] unsigned um
  1495 ;;  sign            1   46[COMRAM] unsigned char 
  1496 ;;  cntr            1   45[COMRAM] unsigned char 
  1497 ;;  exp             1   41[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  3   32[COMRAM] float 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:       15 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    5
  1514 ;; This function calls:
  1515 ;;		___ftpack
  1516 ;; This function is called by:
  1517 ;;		_Delay
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text13
  1522  000186                     __ptext13:
  1523                           	opt stack 0
  1524  000186                     ___ftmul:
  1525                           	opt stack 24
  1526                           
  1527                           ;incstack = 0
  1528  000186  C023  F027         	movff	___ftmul@f1+2,??___ftmul
  1529  00018A  6A28               	clrf	(??___ftmul+1)& (0+255),c
  1530  00018C  6A29               	clrf	(??___ftmul+2)& (0+255),c
  1531  00018E  3422               	rlcf	___ftmul@f1+1,w,c
  1532  000190  3627               	rlcf	??___ftmul& (0+255),f,c
  1533  000192  E301               	bnc	u851
  1534  000194  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  1535  000196                     u851:
  1536  000196  5027               	movf	??___ftmul,w,c
  1537  000198  6E2A               	movwf	___ftmul@exp,c
  1538  00019A  502A               	movf	___ftmul@exp,w,c
  1539  00019C  A4D8               	btfss	status,2,c
  1540  00019E  D002               	goto	l1577
  1541  0001A0  D00E               	goto	l1579
  1542  0001A2  D06C               	goto	l622
  1543  0001A4                     l1577:
  1544  0001A4  C026  F027         	movff	___ftmul@f2+2,??___ftmul
  1545  0001A8  6A28               	clrf	(??___ftmul+1)& (0+255),c
  1546  0001AA  6A29               	clrf	(??___ftmul+2)& (0+255),c
  1547  0001AC  3425               	rlcf	___ftmul@f2+1,w,c
  1548  0001AE  3627               	rlcf	??___ftmul& (0+255),f,c
  1549  0001B0  E301               	bnc	u871
  1550  0001B2  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  1551  0001B4                     u871:
  1552  0001B4  5027               	movf	??___ftmul,w,c
  1553  0001B6  6E2F               	movwf	___ftmul@sign,c
  1554  0001B8  502F               	movf	___ftmul@sign,w,c
  1555  0001BA  A4D8               	btfss	status,2,c
  1556  0001BC  D007               	goto	l1583
  1557  0001BE                     l1579:
  1558  0001BE  0E00               	movlw	0
  1559  0001C0  6E21               	movwf	?___ftmul,c
  1560  0001C2  0E00               	movlw	0
  1561  0001C4  6E22               	movwf	?___ftmul+1,c
  1562  0001C6  0E00               	movlw	0
  1563  0001C8  6E23               	movwf	?___ftmul+2,c
  1564  0001CA  D058               	goto	l622
  1565  0001CC                     l1583:
  1566  0001CC  502F               	movf	___ftmul@sign,w,c
  1567  0001CE  0F7B               	addlw	123
  1568  0001D0  262A               	addwf	___ftmul@exp,f,c
  1569  0001D2  C023  F02F         	movff	___ftmul@f1+2,___ftmul@sign
  1570  0001D6  5026               	movf	___ftmul@f2+2,w,c
  1571  0001D8  1A2F               	xorwf	___ftmul@sign,f,c
  1572  0001DA  0E80               	movlw	128
  1573  0001DC  162F               	andwf	___ftmul@sign,f,c
  1574  0001DE  8E22               	bsf	___ftmul@f1+1,7,c
  1575  0001E0  8E25               	bsf	___ftmul@f2+1,7,c
  1576  0001E2  0EFF               	movlw	255
  1577  0001E4  1624               	andwf	___ftmul@f2,f,c
  1578  0001E6  0EFF               	movlw	255
  1579  0001E8  1625               	andwf	___ftmul@f2+1,f,c
  1580  0001EA  0E00               	movlw	0
  1581  0001EC  1626               	andwf	___ftmul@f2+2,f,c
  1582  0001EE  0E00               	movlw	0
  1583  0001F0  6E2B               	movwf	___ftmul@f3_as_product,c
  1584  0001F2  0E00               	movlw	0
  1585  0001F4  6E2C               	movwf	___ftmul@f3_as_product+1,c
  1586  0001F6  0E00               	movlw	0
  1587  0001F8  6E2D               	movwf	___ftmul@f3_as_product+2,c
  1588  0001FA  0E07               	movlw	7
  1589  0001FC  6E2E               	movwf	___ftmul@cntr,c
  1590  0001FE  D000               	goto	l1597
  1591  000200                     l1597:
  1592  000200  A021               	btfss	___ftmul@f1,0,c
  1593  000202  D007               	goto	l1601
  1594  000204  5024               	movf	___ftmul@f2,w,c
  1595  000206  262B               	addwf	___ftmul@f3_as_product,f,c
  1596  000208  5025               	movf	___ftmul@f2+1,w,c
  1597  00020A  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  1598  00020C  5026               	movf	___ftmul@f2+2,w,c
  1599  00020E  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  1600  000210  D000               	goto	l1601
  1601  000212                     l1601:
  1602  000212  90D8               	bcf	status,0,c
  1603  000214  3223               	rrcf	___ftmul@f1+2,f,c
  1604  000216  3222               	rrcf	___ftmul@f1+1,f,c
  1605  000218  3221               	rrcf	___ftmul@f1,f,c
  1606  00021A  90D8               	bcf	status,0,c
  1607  00021C  3624               	rlcf	___ftmul@f2,f,c
  1608  00021E  3625               	rlcf	___ftmul@f2+1,f,c
  1609  000220  3626               	rlcf	___ftmul@f2+2,f,c
  1610  000222  2E2E               	decfsz	___ftmul@cntr,f,c
  1611  000224  D7ED               	goto	l1597
  1612  000226  D000               	goto	l1605
  1613  000228                     l1605:
  1614  000228  0E09               	movlw	9
  1615  00022A  6E2E               	movwf	___ftmul@cntr,c
  1616  00022C  D000               	goto	l1607
  1617  00022E                     l1607:
  1618  00022E  A021               	btfss	___ftmul@f1,0,c
  1619  000230  D007               	goto	l1611
  1620  000232  5024               	movf	___ftmul@f2,w,c
  1621  000234  262B               	addwf	___ftmul@f3_as_product,f,c
  1622  000236  5025               	movf	___ftmul@f2+1,w,c
  1623  000238  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  1624  00023A  5026               	movf	___ftmul@f2+2,w,c
  1625  00023C  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  1626  00023E  D000               	goto	l1611
  1627  000240                     l1611:
  1628  000240  90D8               	bcf	status,0,c
  1629  000242  3223               	rrcf	___ftmul@f1+2,f,c
  1630  000244  3222               	rrcf	___ftmul@f1+1,f,c
  1631  000246  3221               	rrcf	___ftmul@f1,f,c
  1632  000248  90D8               	bcf	status,0,c
  1633  00024A  322D               	rrcf	___ftmul@f3_as_product+2,f,c
  1634  00024C  322C               	rrcf	___ftmul@f3_as_product+1,f,c
  1635  00024E  322B               	rrcf	___ftmul@f3_as_product,f,c
  1636  000250  2E2E               	decfsz	___ftmul@cntr,f,c
  1637  000252  D7ED               	goto	l1607
  1638  000254  D000               	goto	l1615
  1639  000256                     l1615:
  1640  000256  C02B  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  1641  00025A  C02C  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1642  00025E  C02D  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1643  000262  C02A  F01C         	movff	___ftmul@exp,___ftpack@exp
  1644  000266  C02F  F01D         	movff	___ftmul@sign,___ftpack@sign
  1645  00026A  ECA9  F001         	call	___ftpack	;wreg free
  1646  00026E  C019  F021         	movff	?___ftpack,?___ftmul
  1647  000272  C01A  F022         	movff	?___ftpack+1,?___ftmul+1
  1648  000276  C01B  F023         	movff	?___ftpack+2,?___ftmul+2
  1649  00027A  D000               	goto	l622
  1650  00027C                     l622:
  1651  00027C  0012               	return		;funcret
  1652  00027E                     __end_of___ftmul:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           prodh	equ	0xFF4
  1656                           prodl	equ	0xFF3
  1657                           intcon	equ	0xFF2
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           indf1	equ	0xFE7
  1661                           fsr1h	equ	0xFE2
  1662                           fsr1l	equ	0xFE1
  1663                           indf2	equ	0xFDF
  1664                           postinc2	equ	0xFDE
  1665                           fsr2h	equ	0xFDA
  1666                           fsr2l	equ	0xFD9
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function ___ftpack *****************
  1670 ;; Defined at:
  1671 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  arg             3   24[COMRAM] unsigned um
  1674 ;;  exp             1   27[COMRAM] unsigned char 
  1675 ;;  sign            1   28[COMRAM] unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  3   24[COMRAM] float 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1687 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;Total ram usage:        8 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    4
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		___ftmul
  1698 ;;		___lbtoft
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text14
  1703  000352                     __ptext14:
  1704                           	opt stack 0
  1705  000352                     ___ftpack:
  1706                           	opt stack 24
  1707                           
  1708                           ;incstack = 0
  1709  000352  501C               	movf	___ftpack@exp,w,c
  1710  000354  B4D8               	btfsc	status,2,c
  1711  000356  D005               	goto	l1539
  1712  000358  5019               	movf	___ftpack@arg,w,c
  1713  00035A  101A               	iorwf	___ftpack@arg+1,w,c
  1714  00035C  101B               	iorwf	___ftpack@arg+2,w,c
  1715  00035E  A4D8               	btfss	status,2,c
  1716  000360  D00E               	goto	l1545
  1717  000362                     l1539:
  1718  000362  0E00               	movlw	0
  1719  000364  6E19               	movwf	?___ftpack,c
  1720  000366  0E00               	movlw	0
  1721  000368  6E1A               	movwf	?___ftpack+1,c
  1722  00036A  0E00               	movlw	0
  1723  00036C  6E1B               	movwf	?___ftpack+2,c
  1724  00036E  D053               	goto	l535
  1725  000370  D006               	goto	l1545
  1726  000372                     l1543:
  1727  000372  2A1C               	incf	___ftpack@exp,f,c
  1728  000374  90D8               	bcf	status,0,c
  1729  000376  321B               	rrcf	___ftpack@arg+2,f,c
  1730  000378  321A               	rrcf	___ftpack@arg+1,f,c
  1731  00037A  3219               	rrcf	___ftpack@arg,f,c
  1732  00037C  D000               	goto	l1545
  1733  00037E                     l1545:
  1734  00037E  0E00               	movlw	0
  1735  000380  1419               	andwf	___ftpack@arg,w,c
  1736  000382  6E1E               	movwf	??___ftpack& (0+255),c
  1737  000384  0E00               	movlw	0
  1738  000386  141A               	andwf	___ftpack@arg+1,w,c
  1739  000388  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  1740  00038A  0EFE               	movlw	254
  1741  00038C  141B               	andwf	___ftpack@arg+2,w,c
  1742  00038E  6E20               	movwf	(??___ftpack+2)& (0+255),c
  1743  000390  501E               	movf	??___ftpack,w,c
  1744  000392  101F               	iorwf	??___ftpack+1,w,c
  1745  000394  1020               	iorwf	??___ftpack+2,w,c
  1746  000396  B4D8               	btfsc	status,2,c
  1747  000398  D00E               	goto	l1551
  1748  00039A  D7EB               	goto	l1543
  1749  00039C  D00C               	goto	l1551
  1750  00039E                     l1547:
  1751  00039E  2A1C               	incf	___ftpack@exp,f,c
  1752  0003A0  0E01               	movlw	1
  1753  0003A2  2619               	addwf	___ftpack@arg,f,c
  1754  0003A4  0E00               	movlw	0
  1755  0003A6  221A               	addwfc	___ftpack@arg+1,f,c
  1756  0003A8  0E00               	movlw	0
  1757  0003AA  221B               	addwfc	___ftpack@arg+2,f,c
  1758  0003AC  90D8               	bcf	status,0,c
  1759  0003AE  321B               	rrcf	___ftpack@arg+2,f,c
  1760  0003B0  321A               	rrcf	___ftpack@arg+1,f,c
  1761  0003B2  3219               	rrcf	___ftpack@arg,f,c
  1762  0003B4  D000               	goto	l1551
  1763  0003B6                     l1551:
  1764  0003B6  0E00               	movlw	0
  1765  0003B8  1419               	andwf	___ftpack@arg,w,c
  1766  0003BA  6E1E               	movwf	??___ftpack& (0+255),c
  1767  0003BC  0E00               	movlw	0
  1768  0003BE  141A               	andwf	___ftpack@arg+1,w,c
  1769  0003C0  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  1770  0003C2  0EFF               	movlw	255
  1771  0003C4  141B               	andwf	___ftpack@arg+2,w,c
  1772  0003C6  6E20               	movwf	(??___ftpack+2)& (0+255),c
  1773  0003C8  501E               	movf	??___ftpack,w,c
  1774  0003CA  101F               	iorwf	??___ftpack+1,w,c
  1775  0003CC  1020               	iorwf	??___ftpack+2,w,c
  1776  0003CE  B4D8               	btfsc	status,2,c
  1777  0003D0  D008               	goto	l1555
  1778  0003D2  D7E5               	goto	l1547
  1779  0003D4  D006               	goto	l1555
  1780  0003D6                     l1553:
  1781  0003D6  061C               	decf	___ftpack@exp,f,c
  1782  0003D8  90D8               	bcf	status,0,c
  1783  0003DA  3619               	rlcf	___ftpack@arg,f,c
  1784  0003DC  361A               	rlcf	___ftpack@arg+1,f,c
  1785  0003DE  361B               	rlcf	___ftpack@arg+2,f,c
  1786  0003E0  D000               	goto	l1555
  1787  0003E2                     l1555:
  1788  0003E2  BE1A               	btfsc	___ftpack@arg+1,7,c
  1789  0003E4  D004               	goto	l546
  1790  0003E6  0E02               	movlw	2
  1791  0003E8  601C               	cpfslt	___ftpack@exp,c
  1792  0003EA  D7F5               	goto	l1553
  1793  0003EC  D000               	goto	l546
  1794  0003EE                     l546:
  1795  0003EE  B01C               	btfsc	___ftpack@exp,0,c
  1796  0003F0  D002               	goto	l1561
  1797  0003F2  9E1A               	bcf	___ftpack@arg+1,7,c
  1798  0003F4  D000               	goto	l1561
  1799  0003F6                     l1561:
  1800  0003F6  90D8               	bcf	status,0,c
  1801  0003F8  321C               	rrcf	___ftpack@exp,f,c
  1802  0003FA  501C               	movf	___ftpack@exp,w,c
  1803  0003FC  121B               	iorwf	___ftpack@arg+2,f,c
  1804  0003FE  501D               	movf	___ftpack@sign,w,c
  1805  000400  B4D8               	btfsc	status,2,c
  1806  000402  D002               	goto	l1567
  1807  000404  8E1B               	bsf	___ftpack@arg+2,7,c
  1808  000406  D000               	goto	l1567
  1809  000408                     l1567:
  1810  000408  C019  F019         	movff	___ftpack@arg,?___ftpack
  1811  00040C  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  1812  000410  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  1813  000414  D000               	goto	l535
  1814  000416                     l535:
  1815  000416  0012               	return		;funcret
  1816  000418                     __end_of___ftpack:
  1817                           	opt stack 0
  1818                           tblptru	equ	0xFF8
  1819                           prodh	equ	0xFF4
  1820                           prodl	equ	0xFF3
  1821                           intcon	equ	0xFF2
  1822                           postinc0	equ	0xFEE
  1823                           wreg	equ	0xFE8
  1824                           indf1	equ	0xFE7
  1825                           fsr1h	equ	0xFE2
  1826                           fsr1l	equ	0xFE1
  1827                           indf2	equ	0xFDF
  1828                           postinc2	equ	0xFDE
  1829                           fsr2h	equ	0xFDA
  1830                           fsr2l	equ	0xFD9
  1831                           status	equ	0xFD8
  1832                           
  1833 ;; *************** function ___ftge *****************
  1834 ;; Defined at:
  1835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  ff1             3   47[COMRAM] float 
  1838 ;;  ff2             3   50[COMRAM] float 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1850 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;Total ram usage:        9 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    4
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_Delay
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text15
  1865  0004D8                     __ptext15:
  1866                           	opt stack 0
  1867  0004D8                     ___ftge:
  1868                           	opt stack 25
  1869                           
  1870                           ;incstack = 0
  1871  0004D8  AE32               	btfss	___ftge@ff1+2,7,c
  1872  0004DA  D01B               	goto	l1623
  1873  0004DC  C030  F080         	movff	___ftge@ff1,??___ftge
  1874  0004E0  C031  F081         	movff	___ftge@ff1+1,??___ftge+1
  1875  0004E4  C032  F082         	movff	___ftge@ff1+2,??___ftge+2
  1876  0004E8  0100               	movlb	0	; () banked
  1877  0004EA  1F80               	comf	??___ftge& (0+255),f,b
  1878  0004EC  1F81               	comf	(??___ftge+1)& (0+255),f,b
  1879  0004EE  1F82               	comf	(??___ftge+2)& (0+255),f,b
  1880  0004F0  2B80               	incf	??___ftge& (0+255),f,b
  1881  0004F2  0E00               	movlw	0
  1882  0004F4  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  1883  0004F6  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  1884  0004F8  0E00               	movlw	0
  1885  0004FA  0100               	movlb	0	; () banked
  1886  0004FC  2580               	addwf	??___ftge& (0+255),w,b
  1887  0004FE  6E30               	movwf	___ftge@ff1,c
  1888  000500  0E00               	movlw	0
  1889  000502  0100               	movlb	0	; () banked
  1890  000504  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  1891  000506  6E31               	movwf	___ftge@ff1+1,c
  1892  000508  0E80               	movlw	128
  1893  00050A  0100               	movlb	0	; () banked
  1894  00050C  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  1895  00050E  6E32               	movwf	___ftge@ff1+2,c
  1896  000510  D000               	goto	l1623
  1897  000512                     l1623:
  1898  000512  AE35               	btfss	___ftge@ff2+2,7,c
  1899  000514  D01B               	goto	l1627
  1900  000516  C033  F080         	movff	___ftge@ff2,??___ftge
  1901  00051A  C034  F081         	movff	___ftge@ff2+1,??___ftge+1
  1902  00051E  C035  F082         	movff	___ftge@ff2+2,??___ftge+2
  1903  000522  0100               	movlb	0	; () banked
  1904  000524  1F80               	comf	??___ftge& (0+255),f,b
  1905  000526  1F81               	comf	(??___ftge+1)& (0+255),f,b
  1906  000528  1F82               	comf	(??___ftge+2)& (0+255),f,b
  1907  00052A  2B80               	incf	??___ftge& (0+255),f,b
  1908  00052C  0E00               	movlw	0
  1909  00052E  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  1910  000530  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  1911  000532  0E00               	movlw	0
  1912  000534  0100               	movlb	0	; () banked
  1913  000536  2580               	addwf	??___ftge& (0+255),w,b
  1914  000538  6E33               	movwf	___ftge@ff2,c
  1915  00053A  0E00               	movlw	0
  1916  00053C  0100               	movlb	0	; () banked
  1917  00053E  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  1918  000540  6E34               	movwf	___ftge@ff2+1,c
  1919  000542  0E80               	movlw	128
  1920  000544  0100               	movlb	0	; () banked
  1921  000546  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  1922  000548  6E35               	movwf	___ftge@ff2+2,c
  1923  00054A  D000               	goto	l1627
  1924  00054C                     l1627:
  1925  00054C  0E00               	movlw	0
  1926  00054E  1A30               	xorwf	___ftge@ff1,f,c
  1927  000550  0E00               	movlw	0
  1928  000552  1A31               	xorwf	___ftge@ff1+1,f,c
  1929  000554  0E80               	movlw	128
  1930  000556  1A32               	xorwf	___ftge@ff1+2,f,c
  1931  000558  0E00               	movlw	0
  1932  00055A  1A33               	xorwf	___ftge@ff2,f,c
  1933  00055C  0E00               	movlw	0
  1934  00055E  1A34               	xorwf	___ftge@ff2+1,f,c
  1935  000560  0E80               	movlw	128
  1936  000562  1A35               	xorwf	___ftge@ff2+2,f,c
  1937  000564  5033               	movf	___ftge@ff2,w,c
  1938  000566  5C30               	subwf	___ftge@ff1,w,c
  1939  000568  5034               	movf	___ftge@ff2+1,w,c
  1940  00056A  5831               	subwfb	___ftge@ff1+1,w,c
  1941  00056C  5035               	movf	___ftge@ff2+2,w,c
  1942  00056E  5832               	subwfb	___ftge@ff1+2,w,c
  1943  000570  B0D8               	btfsc	status,0,c
  1944  000572  D002               	goto	l1633
  1945  000574  90D8               	bcf	status,0,c
  1946  000576  D002               	goto	l616
  1947  000578                     l1633:
  1948  000578  80D8               	bsf	status,0,c
  1949  00057A  D000               	goto	l616
  1950  00057C                     l616:
  1951  00057C  0012               	return		;funcret
  1952  00057E                     __end_of___ftge:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           prodh	equ	0xFF4
  1956                           prodl	equ	0xFF3
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           indf1	equ	0xFE7
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           indf2	equ	0xFDF
  1964                           postinc2	equ	0xFDE
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _BRG9600 *****************
  1970 ;; Defined at:
  1971 ;;		line 46 in file "Var_Fun.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, status,2
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    4
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text16
  2000  0008AC                     __ptext16:
  2001                           	opt stack 0
  2002  0008AC                     _BRG9600:
  2003                           	opt stack 26
  2004                           
  2005                           ;Var_Fun.c: 48: SPEN = 1;
  2006                           
  2007                           ;incstack = 0
  2008  0008AC  8EAB               	bsf	4011,7,c	;volatile
  2009                           
  2010                           ;Var_Fun.c: 49: SYNC = 0;
  2011  0008AE  98AC               	bcf	4012,4,c	;volatile
  2012                           
  2013                           ;Var_Fun.c: 50: BRGH = 0;
  2014  0008B0  94AC               	bcf	4012,2,c	;volatile
  2015                           
  2016                           ;Var_Fun.c: 51: BRG16 = 0;
  2017  0008B2  96B8               	bcf	4024,3,c	;volatile
  2018                           
  2019                           ;Var_Fun.c: 52: SPBRG = 12;
  2020  0008B4  0E0C               	movlw	12
  2021  0008B6  6EAF               	movwf	4015,c	;volatile
  2022  0008B8  0012               	return		;funcret
  2023  0008BA                     __end_of_BRG9600:
  2024                           	opt stack 0
  2025                           tblptru	equ	0xFF8
  2026                           prodh	equ	0xFF4
  2027                           prodl	equ	0xFF3
  2028                           intcon	equ	0xFF2
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           indf1	equ	0xFE7
  2032                           fsr1h	equ	0xFE2
  2033                           fsr1l	equ	0xFE1
  2034                           indf2	equ	0xFDF
  2035                           postinc2	equ	0xFDE
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _REC *****************
  2041 ;; Defined at:
  2042 ;;		line 26 in file "Recieve.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;		None               void
  2049 ;; Registers used:
  2050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;Total ram usage:       14 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    3
  2063 ;; This function calls:
  2064 ;;		_DirLED
  2065 ;;		_LCDGoto
  2066 ;;		_LCDPutStr
  2067 ;;		i2_LCDPutCmd
  2068 ;; This function is called by:
  2069 ;;		Interrupt level 2
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	intcode
  2074  000008                     __pintcode:
  2075                           	opt stack 0
  2076  000008                     _REC:
  2077                           	opt stack 24
  2078                           
  2079                           ;incstack = 0
  2080  000008  CFFA F00B          	movff	pclath,??_REC
  2081  00000C  CFFB F00C          	movff	pclatu,??_REC+1
  2082  000010  CFE9 F00D          	movff	fsr0l,??_REC+2
  2083  000014  ED0E  F000         	call	int_func,f	;refresh shadow registers
  2084                           pclatu	equ	0xFFB
  2085                           pclath	equ	0xFFA
  2086                           tblptru	equ	0xFF8
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           fsr0l	equ	0xFE9
  2092                           wreg	equ	0xFE8
  2093                           indf1	equ	0xFE7
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           indf2	equ	0xFDF
  2097                           postinc2	equ	0xFDE
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102                           	psect	intcode_body
  2103  00001C                     __pintcode_body:
  2104                           	opt stack 24
  2105  00001C                     int_func:
  2106                           	opt stack 24
  2107  00001C  0006               	pop		; remove dummy address from shadow register refresh
  2108  00001E  CFEA F00E          	movff	fsr0h,??_REC+3
  2109  000022  CFE1 F00F          	movff	fsr1l,??_REC+4
  2110  000026  CFE2 F010          	movff	fsr1h,??_REC+5
  2111  00002A  CFD9 F011          	movff	fsr2l,??_REC+6
  2112  00002E  CFDA F012          	movff	fsr2h,??_REC+7
  2113  000032  CFF3 F013          	movff	prodl,??_REC+8
  2114  000036  CFF4 F014          	movff	prodh,??_REC+9
  2115  00003A  CFF6 F015          	movff	tblptrl,??_REC+10
  2116  00003E  CFF7 F016          	movff	tblptrh,??_REC+11
  2117  000042  CFF8 F017          	movff	tblptru,??_REC+12
  2118  000046  CFF5 F018          	movff	tablat,??_REC+13
  2119                           
  2120                           ;Recieve.c: 28: if (RCIF&&i<10)
  2121  00004A  AA9E               	btfss	3998,5,c	;volatile
  2122  00004C  D07F               	goto	i2l104
  2123  00004E  0E0A               	movlw	10
  2124  000050  604C               	cpfslt	_i,c
  2125  000052  D07C               	goto	i2l104
  2126                           
  2127                           ;Recieve.c: 29: {
  2128                           ;Recieve.c: 30: if(RCREG!='\r')
  2129  000054  0E0D               	movlw	13
  2130  000056  18AE               	xorwf	4014,w,c	;volatile
  2131  000058  B4D8               	btfsc	status,2,c
  2132  00005A  D00C               	goto	i2l1497
  2133                           
  2134                           ;Recieve.c: 31: {
  2135                           ;Recieve.c: 32: rec[i]=RCREG;
  2136  00005C  504C               	movf	_i,w,c
  2137  00005E  0D01               	mullw	1
  2138  000060  0E36               	movlw	low _rec
  2139  000062  24F3               	addwf	prodl,w,c
  2140  000064  6ED9               	movwf	fsr2l,c
  2141  000066  0E00               	movlw	high _rec
  2142  000068  20F4               	addwfc	prodh,w,c
  2143  00006A  6EDA               	movwf	fsr2h,c
  2144  00006C  CFAE FFDF          	movff	4014,indf2	;volatile
  2145                           
  2146                           ;Recieve.c: 33: i++;
  2147  000070  2A4C               	incf	_i,f,c
  2148                           
  2149                           ;Recieve.c: 34: }
  2150  000072  D06A               	goto	i2l1529
  2151  000074                     i2l1497:
  2152                           
  2153                           ;Recieve.c: 35: else
  2154                           ;Recieve.c: 36: {
  2155                           ;Recieve.c: 37: rec[i]='\0';
  2156  000074  504C               	movf	_i,w,c
  2157  000076  0D01               	mullw	1
  2158  000078  0E36               	movlw	low _rec
  2159  00007A  24F3               	addwf	prodl,w,c
  2160  00007C  6ED9               	movwf	fsr2l,c
  2161  00007E  0E00               	movlw	high _rec
  2162  000080  20F4               	addwfc	prodh,w,c
  2163  000082  6EDA               	movwf	fsr2h,c
  2164  000084  0E00               	movlw	0
  2165  000086  6EDF               	movwf	indf2,c
  2166                           
  2167                           ;Recieve.c: 39: switch(rec[0])
  2168  000088  D03B               	goto	i2l1519
  2169  00008A                     i2l1499:
  2170  00008A  0E00               	movlw	0
  2171  00008C  6E4D               	movwf	_j,c
  2172  00008E  D014               	goto	i2l1505
  2173  000090                     i2l1501:
  2174                           
  2175                           ;Recieve.c: 42: spd[j]=rec[j];
  2176  000090  504D               	movf	_j,w,c
  2177  000092  0D01               	mullw	1
  2178  000094  0E36               	movlw	low _rec
  2179  000096  24F3               	addwf	prodl,w,c
  2180  000098  6ED9               	movwf	fsr2l,c
  2181  00009A  0E00               	movlw	high _rec
  2182  00009C  20F4               	addwfc	prodh,w,c
  2183  00009E  6EDA               	movwf	fsr2h,c
  2184  0000A0  504D               	movf	_j,w,c
  2185  0000A2  0D01               	mullw	1
  2186  0000A4  0E59               	movlw	low _spd
  2187  0000A6  24F3               	addwf	prodl,w,c
  2188  0000A8  6EE1               	movwf	fsr1l,c
  2189  0000AA  0E00               	movlw	high _spd
  2190  0000AC  20F4               	addwfc	prodh,w,c
  2191  0000AE  6EE2               	movwf	fsr1h,c
  2192  0000B0  CFDF FFE7          	movff	indf2,indf1
  2193  0000B4  2A4D               	incf	_j,f,c
  2194  0000B6  D000               	goto	i2l1505
  2195  0000B8                     i2l1505:
  2196  0000B8  504D               	movf	_j,w,c
  2197  0000BA  5C4C               	subwf	_i,w,c
  2198  0000BC  A0D8               	btfss	status,0,c
  2199  0000BE  D028               	goto	i2l1521
  2200  0000C0  D7E7               	goto	i2l1501
  2201                           
  2202                           ;Recieve.c: 45: break;
  2203  0000C2  D026               	goto	i2l1521
  2204  0000C4                     i2l1507:
  2205  0000C4  0E00               	movlw	0
  2206  0000C6  6E4E               	movwf	_k,c
  2207  0000C8  D014               	goto	i2l1513
  2208  0000CA                     i2l1509:
  2209                           
  2210                           ;Recieve.c: 47: dir[k]=rec[k];
  2211  0000CA  504E               	movf	_k,w,c
  2212  0000CC  0D01               	mullw	1
  2213  0000CE  0E36               	movlw	low _rec
  2214  0000D0  24F3               	addwf	prodl,w,c
  2215  0000D2  6ED9               	movwf	fsr2l,c
  2216  0000D4  0E00               	movlw	high _rec
  2217  0000D6  20F4               	addwfc	prodh,w,c
  2218  0000D8  6EDA               	movwf	fsr2h,c
  2219  0000DA  504E               	movf	_k,w,c
  2220  0000DC  0D01               	mullw	1
  2221  0000DE  0E4F               	movlw	low _dir
  2222  0000E0  24F3               	addwf	prodl,w,c
  2223  0000E2  6EE1               	movwf	fsr1l,c
  2224  0000E4  0E00               	movlw	high _dir
  2225  0000E6  20F4               	addwfc	prodh,w,c
  2226  0000E8  6EE2               	movwf	fsr1h,c
  2227  0000EA  CFDF FFE7          	movff	indf2,indf1
  2228  0000EE  2A4E               	incf	_k,f,c
  2229  0000F0  D000               	goto	i2l1513
  2230  0000F2                     i2l1513:
  2231  0000F2  504E               	movf	_k,w,c
  2232  0000F4  5C4C               	subwf	_i,w,c
  2233  0000F6  B0D8               	btfsc	status,0,c
  2234  0000F8  D7E8               	goto	i2l1509
  2235                           
  2236                           ;Recieve.c: 49: DirLED();
  2237  0000FA  EC12  F003         	call	_DirLED	;wreg free
  2238                           
  2239                           ;Recieve.c: 51: }
  2240                           
  2241                           ;Recieve.c: 50: break;
  2242  0000FE  D008               	goto	i2l1521
  2243  000100                     i2l1519:
  2244  000100  5036               	movf	_rec,w,c
  2245                           
  2246                           ; Switch size 1, requested type "space"
  2247                           ; Number of cases is 2, Range of values is 68 to 83
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte            7     4 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252  000102  0A44               	xorlw	68	; case 68
  2253  000104  B4D8               	btfsc	status,2,c
  2254  000106  D7DE               	goto	i2l1507
  2255  000108  0A17               	xorlw	23	; case 83
  2256  00010A  B4D8               	btfsc	status,2,c
  2257  00010C  D7BE               	goto	i2l1499
  2258  00010E  D000               	goto	i2l1521
  2259  000110                     i2l1521:
  2260                           
  2261                           ;Recieve.c: 53: LCDPutCmd(0x01);
  2262  000110  0E01               	movlw	1
  2263  000112  EC6C  F003         	call	i2_LCDPutCmd
  2264                           
  2265                           ;Recieve.c: 54: LCDGoto(0,1);
  2266  000116  0E01               	movlw	1
  2267  000118  6E05               	movwf	LCDGoto@ln,c
  2268  00011A  0E00               	movlw	0
  2269  00011C  ECF1  F002         	call	_LCDGoto
  2270                           
  2271                           ;Recieve.c: 55: LCDPutStr(spd);
  2272  000120  0E59               	movlw	low _spd
  2273  000122  6E05               	movwf	LCDPutStr@str,c
  2274  000124  0E00               	movlw	high _spd
  2275  000126  6E06               	movwf	LCDPutStr@str+1,c
  2276  000128  EC89  F003         	call	_LCDPutStr	;wreg free
  2277                           
  2278                           ;Recieve.c: 56: LCDGoto(0,0);
  2279  00012C  0E00               	movlw	0
  2280  00012E  6E05               	movwf	LCDGoto@ln,c
  2281  000130  0E00               	movlw	0
  2282  000132  ECF1  F002         	call	_LCDGoto
  2283                           
  2284                           ;Recieve.c: 57: LCDPutStr(dir);
  2285  000136  0E4F               	movlw	low _dir
  2286  000138  6E05               	movwf	LCDPutStr@str,c
  2287  00013A  0E00               	movlw	high _dir
  2288  00013C  6E06               	movwf	LCDPutStr@str+1,c
  2289  00013E  EC89  F003         	call	_LCDPutStr	;wreg free
  2290                           
  2291                           ;Recieve.c: 58: i=0;
  2292  000142  0E00               	movlw	0
  2293  000144  6E4C               	movwf	_i,c
  2294  000146  D000               	goto	i2l1529
  2295  000148                     i2l1529:
  2296                           
  2297                           ;Recieve.c: 59: }
  2298                           ;Recieve.c: 60: RCIF = 0;
  2299  000148  9A9E               	bcf	3998,5,c	;volatile
  2300  00014A  D000               	goto	i2l104
  2301  00014C                     i2l104:
  2302  00014C  C018  FFF5         	movff	??_REC+13,tablat
  2303  000150  C017  FFF8         	movff	??_REC+12,tblptru
  2304  000154  C016  FFF7         	movff	??_REC+11,tblptrh
  2305  000158  C015  FFF6         	movff	??_REC+10,tblptrl
  2306  00015C  C014  FFF4         	movff	??_REC+9,prodh
  2307  000160  C013  FFF3         	movff	??_REC+8,prodl
  2308  000164  C012  FFDA         	movff	??_REC+7,fsr2h
  2309  000168  C011  FFD9         	movff	??_REC+6,fsr2l
  2310  00016C  C010  FFE2         	movff	??_REC+5,fsr1h
  2311  000170  C00F  FFE1         	movff	??_REC+4,fsr1l
  2312  000174  C00E  FFEA         	movff	??_REC+3,fsr0h
  2313  000178  C00D  FFE9         	movff	??_REC+2,fsr0l
  2314  00017C  C00C  FFFB         	movff	??_REC+1,pclatu
  2315  000180  C00B  FFFA         	movff	??_REC,pclath
  2316  000184  0011               	retfie		f
  2317  000186                     __end_of_REC:
  2318                           	opt stack 0
  2319                           pclatu	equ	0xFFB
  2320                           pclath	equ	0xFFA
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           prodh	equ	0xFF4
  2326                           prodl	equ	0xFF3
  2327                           intcon	equ	0xFF2
  2328                           postinc0	equ	0xFEE
  2329                           fsr0h	equ	0xFEA
  2330                           fsr0l	equ	0xFE9
  2331                           wreg	equ	0xFE8
  2332                           indf1	equ	0xFE7
  2333                           fsr1h	equ	0xFE2
  2334                           fsr1l	equ	0xFE1
  2335                           indf2	equ	0xFDF
  2336                           postinc2	equ	0xFDE
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _LCDPutStr *****************
  2342 ;; Defined at:
  2343 ;;		line 135 in file "lcd.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  str             2    4[COMRAM] PTR const unsigned char 
  2346 ;;		 -> dir(10), spd(10), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  i               1    6[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        3 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    2
  2365 ;; This function calls:
  2366 ;;		_LCDPutChar
  2367 ;; This function is called by:
  2368 ;;		_REC
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text18
  2373  000712                     __ptext18:
  2374                           	opt stack 0
  2375  000712                     _LCDPutStr:
  2376                           	opt stack 24
  2377                           
  2378                           ;lcd.c: 137: uint8_t i=0;
  2379                           
  2380                           ;incstack = 0
  2381  000712  0E00               	movlw	0
  2382  000714  6E07               	movwf	LCDPutStr@i,c
  2383                           
  2384                           ;lcd.c: 140: while (str[i])
  2385  000716  D00D               	goto	i2l1429
  2386  000718                     i2l1425:
  2387                           
  2388                           ;lcd.c: 141: {
  2389                           ;lcd.c: 143: LCDPutChar(str[i++]);
  2390  000718  5007               	movf	LCDPutStr@i,w,c
  2391  00071A  0D01               	mullw	1
  2392  00071C  50F3               	movf	prodl,w,c
  2393  00071E  2405               	addwf	LCDPutStr@str,w,c
  2394  000720  6ED9               	movwf	fsr2l,c
  2395  000722  50F4               	movf	prodh,w,c
  2396  000724  2006               	addwfc	LCDPutStr@str+1,w,c
  2397  000726  6EDA               	movwf	fsr2h,c
  2398  000728  50DF               	movf	indf2,w,c
  2399  00072A  ECD6  F003         	call	_LCDPutChar
  2400  00072E  2A07               	incf	LCDPutStr@i,f,c
  2401  000730  D000               	goto	i2l1429
  2402  000732                     i2l1429:
  2403  000732  5007               	movf	LCDPutStr@i,w,c
  2404  000734  0D01               	mullw	1
  2405  000736  50F3               	movf	prodl,w,c
  2406  000738  2405               	addwf	LCDPutStr@str,w,c
  2407  00073A  6ED9               	movwf	fsr2l,c
  2408  00073C  50F4               	movf	prodh,w,c
  2409  00073E  2006               	addwfc	LCDPutStr@str+1,w,c
  2410  000740  6EDA               	movwf	fsr2h,c
  2411  000742  50DF               	movf	indf2,w,c
  2412  000744  A4D8               	btfss	status,2,c
  2413  000746  D7E8               	goto	i2l1425
  2414  000748  0012               	return		;funcret
  2415  00074A                     __end_of_LCDPutStr:
  2416                           	opt stack 0
  2417                           pclatu	equ	0xFFB
  2418                           pclath	equ	0xFFA
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           prodh	equ	0xFF4
  2424                           prodl	equ	0xFF3
  2425                           intcon	equ	0xFF2
  2426                           postinc0	equ	0xFEE
  2427                           fsr0h	equ	0xFEA
  2428                           fsr0l	equ	0xFE9
  2429                           wreg	equ	0xFE8
  2430                           indf1	equ	0xFE7
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           fsr2h	equ	0xFDA
  2436                           fsr2l	equ	0xFD9
  2437                           status	equ	0xFD8
  2438                           
  2439 ;; *************** function _LCDPutChar *****************
  2440 ;; Defined at:
  2441 ;;		line 103 in file "lcd.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  ch              1    wreg     unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  ch              1    3[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;		None               void
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		i2_LCDWriteNibble
  2464 ;; This function is called by:
  2465 ;;		_LCDPutStr
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text19
  2470  0007AC                     __ptext19:
  2471                           	opt stack 0
  2472  0007AC                     _LCDPutChar:
  2473                           	opt stack 24
  2474                           
  2475                           ;incstack = 0
  2476                           ;LCDPutChar@ch stored from wreg
  2477  0007AC  6E04               	movwf	LCDPutChar@ch,c
  2478                           
  2479                           ;lcd.c: 105: _delay((unsigned long)((5)*(8e6/4000.0)));
  2480  0007AE  0E0D               	movlw	13
  2481  0007B0  6E03               	movwf	??_LCDPutChar& (0+255),c
  2482  0007B2  0EFC               	movlw	252
  2483  0007B4                     i2u100_47:
  2484  0007B4  2EE8               	decfsz	wreg,f,c
  2485  0007B6  D7FE               	goto	i2u100_47
  2486  0007B8  2E03               	decfsz	??_LCDPutChar& (0+255),f,c
  2487  0007BA  D7FC               	goto	i2u100_47
  2488                           
  2489                           ;lcd.c: 108: LCDWriteNibble(ch,1);
  2490  0007BC  0E01               	movlw	1
  2491  0007BE  6E01               	movwf	i2LCDWriteNibble@rs,c
  2492  0007C0  5004               	movf	LCDPutChar@ch,w,c
  2493  0007C2  ECEC  F003         	call	i2_LCDWriteNibble
  2494                           
  2495                           ;lcd.c: 111: ch = (ch << 4);
  2496  0007C6  3804               	swapf	LCDPutChar@ch,w,c
  2497  0007C8  0BF0               	andlw	240
  2498  0007CA  6E04               	movwf	LCDPutChar@ch,c
  2499                           
  2500                           ;lcd.c: 114: LCDWriteNibble(ch,1);
  2501  0007CC  0E01               	movlw	1
  2502  0007CE  6E01               	movwf	i2LCDWriteNibble@rs,c
  2503  0007D0  5004               	movf	LCDPutChar@ch,w,c
  2504  0007D2  ECEC  F003         	call	i2_LCDWriteNibble
  2505  0007D6  0012               	return		;funcret
  2506  0007D8                     __end_of_LCDPutChar:
  2507                           	opt stack 0
  2508                           pclatu	equ	0xFFB
  2509                           pclath	equ	0xFFA
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           prodh	equ	0xFF4
  2515                           prodl	equ	0xFF3
  2516                           intcon	equ	0xFF2
  2517                           postinc0	equ	0xFEE
  2518                           fsr0h	equ	0xFEA
  2519                           fsr0l	equ	0xFE9
  2520                           wreg	equ	0xFE8
  2521                           indf1	equ	0xFE7
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _LCDGoto *****************
  2531 ;; Defined at:
  2532 ;;		line 148 in file "lcd.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  pos             1    wreg     unsigned char 
  2535 ;;  ln              1    4[COMRAM] unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  pos             1    9[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;		None               void
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2547 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;Total ram usage:        6 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    2
  2554 ;; This function calls:
  2555 ;;		i2_LCDPutCmd
  2556 ;; This function is called by:
  2557 ;;		_REC
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text20
  2562  0005E2                     __ptext20:
  2563                           	opt stack 0
  2564  0005E2                     _LCDGoto:
  2565                           	opt stack 24
  2566                           
  2567                           ;incstack = 0
  2568                           ;LCDGoto@pos stored from wreg
  2569  0005E2  6E0A               	movwf	LCDGoto@pos,c
  2570                           
  2571                           ;lcd.c: 151: if ((ln > (2-1)) || (pos > (16-1)))
  2572  0005E4  0E02               	movlw	2
  2573  0005E6  6005               	cpfslt	LCDGoto@ln,c
  2574  0005E8  D01C               	goto	i2l34
  2575  0005EA  0E0F               	movlw	15
  2576  0005EC  640A               	cpfsgt	LCDGoto@pos,c
  2577  0005EE  D001               	goto	i2l1435
  2578                           
  2579                           ;lcd.c: 152: {
  2580                           ;lcd.c: 154: return;
  2581  0005F0  D018               	goto	i2l34
  2582  0005F2                     i2l1435:
  2583                           
  2584                           ;lcd.c: 155: }
  2585                           ;lcd.c: 158: LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2586  0005F2  0405               	decf	LCDGoto@ln,w,c
  2587  0005F4  B4D8               	btfsc	status,2,c
  2588  0005F6  D002               	goto	i2l1439
  2589  0005F8  0E80               	movlw	128
  2590  0005FA  D001               	goto	L1
  2591  0005FC                     i2l1439:
  2592  0005FC  0EC0               	movlw	192
  2593  0005FE                     L1:
  2594  0005FE  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  2595  000602  6A07               	clrf	(??_LCDGoto+1)& (0+255),c
  2596  000604  1006               	iorwf	??_LCDGoto,w,c
  2597  000606  6E08               	movwf	_LCDGoto$116,c
  2598  000608  5007               	movf	??_LCDGoto+1,w,c
  2599  00060A  6E09               	movwf	_LCDGoto$116+1,c
  2600  00060C  D000               	goto	i2l1441
  2601  00060E                     i2l1441:
  2602  00060E  5008               	movf	_LCDGoto$116,w,c
  2603  000610  EC6C  F003         	call	i2_LCDPutCmd
  2604                           
  2605                           ;lcd.c: 161: _delay((unsigned long)((5)*(8e6/4000.0)));
  2606  000614  0E0D               	movlw	13
  2607  000616  6E06               	movwf	??_LCDGoto& (0+255),c
  2608  000618  0EFC               	movlw	252
  2609  00061A                     i2u101_47:
  2610  00061A  2EE8               	decfsz	wreg,f,c
  2611  00061C  D7FE               	goto	i2u101_47
  2612  00061E  2E06               	decfsz	??_LCDGoto& (0+255),f,c
  2613  000620  D7FC               	goto	i2u101_47
  2614  000622                     i2l34:
  2615  000622  0012               	return		;funcret
  2616  000624                     __end_of_LCDGoto:
  2617                           	opt stack 0
  2618                           pclatu	equ	0xFFB
  2619                           pclath	equ	0xFFA
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           fsr0h	equ	0xFEA
  2629                           fsr0l	equ	0xFE9
  2630                           wreg	equ	0xFE8
  2631                           indf1	equ	0xFE7
  2632                           fsr1h	equ	0xFE2
  2633                           fsr1l	equ	0xFE1
  2634                           indf2	equ	0xFDF
  2635                           postinc2	equ	0xFDE
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function i2_LCDPutCmd *****************
  2641 ;; Defined at:
  2642 ;;		line 118 in file "lcd.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  ch              1    wreg     unsigned char 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  ch              1    3[COMRAM] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;Total ram usage:        2 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    1
  2663 ;; This function calls:
  2664 ;;		i2_LCDWriteNibble
  2665 ;; This function is called by:
  2666 ;;		_LCDGoto
  2667 ;;		_REC
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text21
  2672  0006D8                     __ptext21:
  2673                           	opt stack 0
  2674  0006D8                     i2_LCDPutCmd:
  2675                           	opt stack 25
  2676                           
  2677                           ;incstack = 0
  2678                           ;i2LCDPutCmd@ch stored from wreg
  2679  0006D8  6E04               	movwf	i2LCDPutCmd@ch,c
  2680                           
  2681                           ;lcd.c: 120: _delay((unsigned long)((5)*(8e6/4000.0)));
  2682  0006DA  0E0D               	movlw	13
  2683  0006DC  6E03               	movwf	??i2_LCDPutCmd& (0+255),c
  2684  0006DE  0EFC               	movlw	252
  2685  0006E0                     i2u102_47:
  2686  0006E0  2EE8               	decfsz	wreg,f,c
  2687  0006E2  D7FE               	goto	i2u102_47
  2688  0006E4  2E03               	decfsz	??i2_LCDPutCmd& (0+255),f,c
  2689  0006E6  D7FC               	goto	i2u102_47
  2690                           
  2691                           ;lcd.c: 123: LCDWriteNibble(ch,0);
  2692  0006E8  0E00               	movlw	0
  2693  0006EA  6E01               	movwf	i2LCDWriteNibble@rs,c
  2694  0006EC  5004               	movf	i2LCDPutCmd@ch,w,c
  2695  0006EE  ECEC  F003         	call	i2_LCDWriteNibble
  2696                           
  2697                           ;lcd.c: 126: ch = (ch << 4);
  2698  0006F2  3804               	swapf	i2LCDPutCmd@ch,w,c
  2699  0006F4  0BF0               	andlw	240
  2700  0006F6  6E04               	movwf	i2LCDPutCmd@ch,c
  2701                           
  2702                           ;lcd.c: 128: _delay((unsigned long)((1)*(8e6/4000.0)));
  2703  0006F8  0E03               	movlw	3
  2704  0006FA  6E03               	movwf	??i2_LCDPutCmd& (0+255),c
  2705  0006FC  0E98               	movlw	152
  2706  0006FE                     i2u103_47:
  2707  0006FE  2EE8               	decfsz	wreg,f,c
  2708  000700  D7FE               	goto	i2u103_47
  2709  000702  2E03               	decfsz	??i2_LCDPutCmd& (0+255),f,c
  2710  000704  D7FC               	goto	i2u103_47
  2711                           
  2712                           ;lcd.c: 131: LCDWriteNibble(ch,0);
  2713  000706  0E00               	movlw	0
  2714  000708  6E01               	movwf	i2LCDWriteNibble@rs,c
  2715  00070A  5004               	movf	i2LCDPutCmd@ch,w,c
  2716  00070C  ECEC  F003         	call	i2_LCDWriteNibble
  2717  000710  0012               	return		;funcret
  2718  000712                     __end_ofi2_LCDPutCmd:
  2719                           	opt stack 0
  2720                           pclatu	equ	0xFFB
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           fsr0h	equ	0xFEA
  2731                           fsr0l	equ	0xFE9
  2732                           wreg	equ	0xFE8
  2733                           indf1	equ	0xFE7
  2734                           fsr1h	equ	0xFE2
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function i2_LCDWriteNibble *****************
  2743 ;; Defined at:
  2744 ;;		line 76 in file "lcd.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  ch              1    wreg     unsigned char 
  2747 ;;  rs              1    0[COMRAM] unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  ch              1    1[COMRAM] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_LCDPutChar
  2769 ;;		i2_LCDPutCmd
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text22
  2774  0007D8                     __ptext22:
  2775                           	opt stack 0
  2776  0007D8                     i2_LCDWriteNibble:
  2777                           	opt stack 25
  2778                           
  2779                           ;incstack = 0
  2780                           ;i2LCDWriteNibble@ch stored from wreg
  2781  0007D8  6E02               	movwf	i2LCDWriteNibble@ch,c
  2782                           
  2783                           ;lcd.c: 79: ch = (ch >> 4);
  2784  0007DA  3802               	swapf	i2LCDWriteNibble@ch,w,c
  2785  0007DC  0B0F               	andlw	15
  2786  0007DE  6E02               	movwf	i2LCDWriteNibble@ch,c
  2787                           
  2788                           ;lcd.c: 82: ch = (ch & 0x0F);
  2789  0007E0  5002               	movf	i2LCDWriteNibble@ch,w,c
  2790  0007E2  0B0F               	andlw	15
  2791  0007E4  6E02               	movwf	i2LCDWriteNibble@ch,c
  2792                           
  2793                           ;lcd.c: 85: PORTD = (PORTD & 0xF0);
  2794  0007E6  5083               	movf	3971,w,c	;volatile
  2795  0007E8  0BF0               	andlw	240
  2796  0007EA  6E83               	movwf	3971,c	;volatile
  2797                           
  2798                           ;lcd.c: 88: PORTD = (PORTD | ch);
  2799  0007EC  5083               	movf	3971,w,c	;volatile
  2800  0007EE  1002               	iorwf	i2LCDWriteNibble@ch,w,c
  2801  0007F0  6E83               	movwf	3971,c	;volatile
  2802                           
  2803                           ;lcd.c: 91: PORTDbits.RD4 = rs;
  2804  0007F2  B001               	btfsc	i2LCDWriteNibble@rs,0,c
  2805  0007F4  D002               	bra	i2u50_45
  2806  0007F6  9883               	bcf	3971,4,c	;volatile
  2807  0007F8  D001               	bra	i2u50_46
  2808  0007FA                     i2u50_45:
  2809  0007FA  8883               	bsf	3971,4,c	;volatile
  2810  0007FC                     i2u50_46:
  2811                           
  2812                           ;lcd.c: 94: PORTDbits.RD5 = 0;
  2813  0007FC  9A83               	bcf	3971,5,c	;volatile
  2814                           
  2815                           ;lcd.c: 97: PORTDbits.RD6 = 1;
  2816  0007FE  8C83               	bsf	3971,6,c	;volatile
  2817                           
  2818                           ;lcd.c: 100: PORTDbits.RD6 = 0;
  2819  000800  9C83               	bcf	3971,6,c	;volatile
  2820  000802  0012               	return		;funcret
  2821  000804                     __end_ofi2_LCDWriteNibble:
  2822                           	opt stack 0
  2823                           pclatu	equ	0xFFB
  2824                           pclath	equ	0xFFA
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           prodh	equ	0xFF4
  2830                           prodl	equ	0xFF3
  2831                           intcon	equ	0xFF2
  2832                           postinc0	equ	0xFEE
  2833                           fsr0h	equ	0xFEA
  2834                           fsr0l	equ	0xFE9
  2835                           wreg	equ	0xFE8
  2836                           indf1	equ	0xFE7
  2837                           fsr1h	equ	0xFE2
  2838                           fsr1l	equ	0xFE1
  2839                           indf2	equ	0xFDF
  2840                           postinc2	equ	0xFDE
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _DirLED *****************
  2846 ;; Defined at:
  2847 ;;		line 2 in file "Var_Fun.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_REC
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text23
  2875  000624                     __ptext23:
  2876                           	opt stack 0
  2877  000624                     _DirLED:
  2878                           	opt stack 26
  2879                           
  2880                           ;Var_Fun.c: 4: switch(dir[4])
  2881                           
  2882                           ;incstack = 0
  2883  000624  D010               	goto	i2l1143
  2884  000626                     i2l1125:
  2885  000626  0E00               	movlw	0
  2886  000628  6E8A               	movwf	3978,c	;volatile
  2887  00062A  808A               	bsf	3978,0,c	;volatile
  2888  00062C  D01A               	goto	i2l185
  2889  00062E                     i2l1129:
  2890  00062E  0E00               	movlw	0
  2891  000630  6E8A               	movwf	3978,c	;volatile
  2892  000632  828A               	bsf	3978,1,c	;volatile
  2893  000634  D016               	goto	i2l185
  2894  000636                     i2l1133:
  2895  000636  0E00               	movlw	0
  2896  000638  6E8A               	movwf	3978,c	;volatile
  2897  00063A  848A               	bsf	3978,2,c	;volatile
  2898  00063C  D012               	goto	i2l185
  2899  00063E                     i2l1137:
  2900  00063E  0E00               	movlw	0
  2901  000640  6E8A               	movwf	3978,c	;volatile
  2902  000642  868A               	bsf	3978,3,c	;volatile
  2903                           
  2904                           ;Var_Fun.c: 10: }
  2905  000644  D00E               	goto	i2l185
  2906  000646                     i2l1143:
  2907  000646  5053               	movf	_dir+4,w,c
  2908                           
  2909                           ; Switch size 1, requested type "space"
  2910                           ; Number of cases is 4, Range of values is 100 to 117
  2911                           ; switch strategies available:
  2912                           ; Name         Instructions Cycles
  2913                           ; simple_byte           13     7 (average)
  2914                           ;	Chosen strategy is simple_byte
  2915  000648  0A64               	xorlw	100	; case 100
  2916  00064A  B4D8               	btfsc	status,2,c
  2917  00064C  D7F8               	goto	i2l1137
  2918  00064E  0A08               	xorlw	8	; case 108
  2919  000650  B4D8               	btfsc	status,2,c
  2920  000652  D7F1               	goto	i2l1133
  2921  000654  0A1E               	xorlw	30	; case 114
  2922  000656  B4D8               	btfsc	status,2,c
  2923  000658  D7EA               	goto	i2l1129
  2924  00065A  0A07               	xorlw	7	; case 117
  2925  00065C  B4D8               	btfsc	status,2,c
  2926  00065E  D7E3               	goto	i2l1125
  2927  000660  D000               	goto	i2l185
  2928  000662                     i2l185:
  2929  000662  0012               	return		;funcret
  2930  000664                     __end_of_DirLED:
  2931                           	opt stack 0
  2932  0000                     pclatu	equ	0xFFB
  2933                           pclath	equ	0xFFA
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           postinc0	equ	0xFEE
  2942                           fsr0h	equ	0xFEA
  2943                           fsr0l	equ	0xFE9
  2944                           wreg	equ	0xFE8
  2945                           indf1	equ	0xFE7
  2946                           fsr1h	equ	0xFE2
  2947                           fsr1l	equ	0xFE1
  2948                           indf2	equ	0xFDF
  2949                           postinc2	equ	0xFDE
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           pclatu	equ	0xFFB
  2954                           pclath	equ	0xFFA
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           intcon	equ	0xFF2
  2962                           postinc0	equ	0xFEE
  2963                           fsr0h	equ	0xFEA
  2964                           fsr0l	equ	0xFE9
  2965                           wreg	equ	0xFE8
  2966                           indf1	equ	0xFE7
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           indf2	equ	0xFDF
  2970                           postinc2	equ	0xFDE
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975                           	psect	rparam
  2976  0000                     pclatu	equ	0xFFB
  2977                           pclath	equ	0xFFA
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           fsr0h	equ	0xFEA
  2987                           fsr0l	equ	0xFE9
  2988                           wreg	equ	0xFE8
  2989                           indf1	equ	0xFE7
  2990                           fsr1h	equ	0xFE2
  2991                           fsr1l	equ	0xFE1
  2992                           indf2	equ	0xFDF
  2993                           postinc2	equ	0xFDE
  2994                           fsr2h	equ	0xFDA
  2995                           fsr2l	equ	0xFD9
  2996                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     53     103
    BANK0           128      8       8
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> duty(COMRAM[5]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 10
		 -> dir(COMRAM[10]), spd(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _Duty->_atoi
    _atoi->___wmul
    _Delay->___ftge
    ___lbtoft->___ftpack
    ___ftmul->___ftpack
    ___ftge->___ftmul

Critical Paths under _REC in COMRAM

    _REC->_LCDGoto
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->i2_LCDWriteNibble
    _LCDGoto->i2_LCDPutCmd
    i2_LCDPutCmd->i2_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_Delay
    _Delay->___ftge

Critical Paths under _REC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _REC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _REC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _REC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _REC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _REC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _REC in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _REC in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _REC in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _REC in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _REC in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _REC in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _REC in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _REC in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _REC in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _REC in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7070
                            _BRG9600
                              _Delay
                               _Duty
                     _LCD_Initialize
                              _Ports
                             _pwmIni
                         _recieveIni
 ---------------------------------------------------------------------------------
 (1) _recieveIni                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmIni                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ports                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     361
                                             28 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     361
                                             26 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     294
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Duty                                                 3     3      0     737
                                             37 COMRAM     3     3      0
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     647
                                             30 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     2      3    5972
                                              3 BANK0      5     2      3
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2375
                                             32 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3100
                                             32 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     352
                                             47 COMRAM     6     0      6
                                              0 BANK0      3     3      0
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _BRG9600                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _REC                                                 14    14      0    1263
                                             10 COMRAM    14    14      0
                             _DirLED
                            _LCDGoto
                          _LCDPutStr
                        i2_LCDPutCmd
 ---------------------------------------------------------------------------------
 (5) _LCDPutStr                                            3     1      2     479
                                              4 COMRAM     3     1      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (6) _LCDPutChar                                           2     2      0     261
                                              2 COMRAM     2     2      0
                   i2_LCDWriteNibble
 ---------------------------------------------------------------------------------
 (5) _LCDGoto                                              6     5      1     523
                                              4 COMRAM     6     5      1
                        i2_LCDPutCmd
 ---------------------------------------------------------------------------------
 (5) i2_LCDPutCmd                                          2     2      0     261
                                              2 COMRAM     2     2      0
                   i2_LCDWriteNibble
 ---------------------------------------------------------------------------------
 (6) i2_LCDWriteNibble                                     2     1      1     194
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _DirLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BRG9600
   _Delay
     ___ftge
       ___ftmul (ARG)
         ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___lbtoft
       ___ftpack
   _Duty
     _atoi
       ___wmul
       _isdigit
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _Ports
   _pwmIni
   _recieveIni

 _REC (ROOT)
   _DirLED
   _LCDGoto
     i2_LCDPutCmd
       i2_LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       i2_LCDWriteNibble
   i2_LCDPutCmd
     i2_LCDWriteNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      8       8       5        6.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     35      67       1       81.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      34        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 28 13:28:36 2019

                        _d 004A                          _i 004C                          _j 004D  
                        _k 004E                          _t 0040             _LCD_Initialize 0664  
              ?_LCDPutChar 0001        ___wmul@multiplicand 001B                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000                        l212 082A  
                      l622 027C                        l535 0416                        l616 057C  
                      l546 03EE                        l394 0348                        l395 0350  
                      l658 0872                        l684 0850                        _GIE 007F97  
             __CFG_CPB$OFF 000000                        _REC 0008                        _PR2 000FCB  
             __CFG_CPD$OFF 000000                        u395 07A2                        u396 07A4  
                      u851 0196                        u871 01B4                        u957 0674  
                      u967 06A6                        u977 06C4                        u987 04CC  
                      u997 058E                        _dir 004F                        _rec 0036  
                      _spd 0059           i2_LCDWriteNibble 07D8            __end_of_BRG9600 08BA  
                      prod 000FF3         i2LCDWriteNibble@ch 0002                        wreg 000FE8  
       i2LCDWriteNibble@rs 0001               __CFG_LVP$OFF 000000            __end_of_LCDGoto 0624  
                     ?_REC 0001               __CFG_WDT$OFF 000000                       l1301 0280  
                     l1303 0286                       l1321 0316                       l1313 02C6  
                     l1317 02DA                       l1319 0310                       l1601 0212  
                     l1611 0240                       l1267 086A                       l1451 0450  
                     l1605 0228                       l1623 0512                       l1551 03B6  
                     l1543 0372                       l1615 0256                       l1607 022E  
                     l1447 041E                       l1633 0578                       l1561 03F6  
                     l1553 03D6                       l1545 037E                       l1627 054C  
                     l1555 03E2                       l1547 039E                       l1539 0362  
                     l1643 0586                       l1567 0408                       l1583 01CC  
                     l1647 059C                       l1577 01A4                       l1579 01BE  
                     l1659 0760                       l1597 0200                       _BRGH 007D62  
                     _CREN 007D5C                       _LATB 000F8A                       _PEIE 007F96  
                     _RCIE 007CED                       _RCIF 007CF5                       i2l34 0622  
                     _TMR2 000FCC                       _SPEN 007D5F                       _SYNC 007D64  
                     _Duty 0418                       _atoi 027E                       _main 074A  
             ___ftpack@arg 0019                       _duty 0063               ___ftpack@exp 001C  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       indf1 000FE7                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       pclat 000FFA  
       __size_of_LCDPutCmd 003A                       prodh 000FF4                       prodl 000FF3  
                     start 0018         __size_of_LCDPutStr 0038              __CFG_IESO$OFF 000000  
   __end_of_LCD_Initialize 069E              __CFG_MCLRE$ON 000000               ___ftmul@cntr 002E  
             ___param_bank 000010               ___ftmul@sign 002F                      ??_REC 000B  
              LCDPutCmd@ch 001C                      ?_Duty 0001                      ?_atoi 001F  
                    ?_main 0001                      _BRG16 007DC3            __end_of___ftmul 027E  
                    _LATB0 007C50                      _LATB1 007C51                      _LATB2 007C52  
                    _LATB3 007C53                      _LATC2 007C5A                      i2l104 014C  
                    i2l185 0662                      _RCREG 000FAE                      _SPBRG 000FAF  
                    _PORTD 000F83                      _TRISB 000F93                      _TRISD 000F95  
                    _Delay 057E              __CFG_PWRT$OFF 000000                      Duty@f 0028  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
                    _Ports 089E              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000               ?i2_LCDPutCmd 0001  
          __end_of_isdigit 0874              ___ftpack@sign 001D                      atoi@a 0024  
                    atoi@s 001F                      tablat 000FF5        __size_of_LCDPutChar 002C  
                    status 000FD8            ?_LCD_Initialize 0001            __initialization 0874  
             __end_of_Duty 04D8               __end_of_atoi 0352               __end_of_main 0780  
                ??_BRG9600 0019                     ??_Duty 0026                     ??_atoi 0021  
                   ??_main 0036              __activetblptr 000002                  ??_LCDGoto 0006  
        __end_of_LCDPutCmd 06D8               LCDPutChar@ch 0004          __end_of_LCDPutStr 074A  
                   ?_Delay 0083                     ?_Ports 0001                     _CCPR1L 000FBE  
         __end_of___ftpack 0418           __end_of___lbtoft 0852                     i2l1133 0636  
                   i2l1125 0626                     i2l1143 0646                     i2l1137 063E  
                   i2l1129 062E                     i2l1501 0090                     i2l1441 060E  
                   i2l1425 0718                     i2l1513 00F2                     i2l1521 0110  
                   i2l1505 00B8                     i2l1435 05F2                     i2l1507 00C4  
                   i2l1429 0732                     i2l1509 00CA                     Delay@i 0087  
                   i2l1439 05FC                     i2l1519 0100                     i2l1529 0148  
                   i2l1497 0074                     i2l1499 008A                     _TMR2ON 007E52  
             LCDPutStr@str 0005                     _TRISC2 007CA2                     _DirLED 0624  
           _LCDWriteNibble 0780             __CFG_XINST$OFF 000000                     ___ftge 04D8  
                   ___wmul 0804             __CFG_STVREN$ON 000000                  ??___ftmul 0027  
                   clear_0 087A                     _pwmIni 088A      ___ftmul@f3_as_product 002B  
                ??_isdigit 0019                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8     __end_of_LCDWriteNibble 07AC                 __accesstop 0080  
  __end_of__initialization 0880            __CFG_PBADEN$OFF 000000                 ___ftge@ff1 0030  
               ___ftge@ff2 0033              ___rparam_used 000001                  LCDGoto@ln 0005  
 __end_ofi2_LCDWriteNibble 0804                 ___lbtoft@c 0024              __end_of_Delay 05E2  
               ___ftmul@f1 0021                 ___ftmul@f2 0024             __pcstackCOMRAM 0001  
            __end_of_Ports 08AC               ??_LCDPutChar 0003                    ??_Delay 0086  
                  ??_Ports 0019       __size_ofi2_LCDPutCmd 003A            ?_LCDWriteNibble 0019  
       __end_of_LCDPutChar 07D8                    ?_DirLED 0001                    ?___ftge 0030  
                  ?___wmul 0019                    _BRG9600 08AC                  ?___ftpack 0019  
                ?___lbtoft 0021                    ?_pwmIni 0001                    _T2CKPS0 007E50  
                  _T2CKPS1 007E51                    _LCDGoto 05E2                    i2u50_45 07FA  
                  i2u50_46 07FC           ??_LCD_Initialize 001D            __size_of_DirLED 0040  
                  __Hparam 0000                    __Lparam 0000            __size_of___ftge 00A6  
          __size_of___wmul 0028                    ___ftmul 0186                    __pcinit 0874  
               ??___ftpack 001E                 ??___lbtoft 0024                    __ramtop 1000  
                  __ptext0 074A                    __ptext1 08BA                    __ptext2 088A  
                  __ptext3 089E                    __ptext4 0664                    __ptext5 069E  
                  __ptext6 0780                    __ptext7 0418                    __ptext8 027E  
                  __ptext9 0852            __size_of_pwmIni 0014               __size_of_REC 017E  
                  _isdigit 0852                 _recieveIni 08BA                  _LCDPutCmd 069E  
                _LCDPutStr 0712             __pintcode_body 001C       end_of_initialization 0880  
            __Lmediumconst 0000                    int_func 001C                    postinc0 000FEE  
                  postinc2 000FDE                  _PORTDbits 000F83                 ?_LCDPutCmd 0001  
               ?_LCDPutStr 0005                _CCP1CONbits 000FBD                 LCDGoto@pos 000A  
           __end_of_DirLED 0664          ?i2_LCDWriteNibble 0001                ___ftmul@exp 002A  
       ??i2_LCDWriteNibble 0002             __end_of___ftge 057E                 LCDPutStr@i 0007  
           __end_of___wmul 082C             __end_of_pwmIni 089E        start_initialization 0874  
              ?_recieveIni 0001                __end_of_REC 0186           ??_LCDWriteNibble 001A  
                 ??_DirLED 0001                   ??___ftge 0080                   ??___wmul 001D  
         __CFG_LPT1OSC$OFF 000000                   ?_BRG9600 0001                   ??_pwmIni 0019  
                 ?_LCDGoto 0005          __size_of___ftpack 00C6          __size_of___lbtoft 0026  
              __pbssCOMRAM 0036              __pcstackBANK0 0080              ??i2_LCDPutCmd 0003  
              ??_LCDPutCmd 001B                ??_LCDPutStr 0007          __CFG_CCP2MX$PORTC 000000  
      __size_of_recieveIni 000C                  __pintcode 0008                   ?___ftmul 0021  
         LCDWriteNibble@ch 001A           LCDWriteNibble@rs 0019              i2LCDPutCmd@ch 0004  
                 ?_isdigit 0001             __size_of_Delay 0064             __size_of_Ports 000E  
           ___wmul@product 001D                   Delay@fac 0083        __end_ofi2_LCDPutCmd 0712  
              _LCDGoto$116 0008                   i2u100_47 07B4                   i2u101_47 061A  
                 i2u102_47 06E0                   i2u103_47 06FE           __CFG_WDTPS$32768 000000  
         __size_of_BRG9600 000E          ___wmul@multiplier 0019           __size_of_LCDGoto 0042  
                 __Hrparam 0000                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
  __size_of_LCD_Initialize 003A           __size_of___ftmul 00F8                   ___ftpack 0352  
                 ___lbtoft 082C                _isdigit$536 001A  __size_ofi2_LCDWriteNibble 002C  
             ??_recieveIni 0019           __size_of_isdigit 0022                   __ptext10 0804  
                 __ptext11 057E                   __ptext20 05E2                   __ptext12 082C  
                 __ptext21 06D8                   __ptext13 0186                   __ptext22 07D8  
                 __ptext14 0352                   __ptext23 0624                   __ptext15 04D8  
                 __ptext16 08AC                   __ptext18 0712                   __ptext19 07AC  
              i2_LCDPutCmd 06D8              __size_of_Duty 00C0              __size_of_atoi 00D4  
            __size_of_main 0036         __end_of_recieveIni 08C6                   atoi@sign 0023  
               _LCDPutChar 07AC                   isdigit@c 001B                   intlevel2 0000  
  __size_of_LCDWriteNibble 002C  
